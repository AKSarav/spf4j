õ∆
)
!org.openjdk.jmh.runner.ForkedMainmainò†í
*
#org.openjdk.jmh.runner.ForkedRunnerrun„
†›

2
!org.openjdk.jmh.runner.BaseRunnerrunBenchmarks¶
††

1
!org.openjdk.jmh.runner.BaseRunnerrunBenchmarkÍ	†‰	
1
!org.openjdk.jmh.runner.BaseRunnerrunBenchmarkÆ	†®	
;
+org.openjdk.jmh.runner.LoopBenchmarkHandlerrunIterationË†À
5
'org.openjdk.jmh.results.IterationResult
addResultsë^

java.util.ArrayList$Itrnext;7
1
java.util.ArrayList$ItrcheckForComodificationw

java.util.ArrayListiteratorTP
!
java.util.ArrayList$Itr<init>+'
!
java.util.ArrayList$Itr<init>≥
4
'org.openjdk.jmh.results.IterationResult	addResult˙ı

java.util.ArrayListadd÷—
-
java.util.ArrayListensureCapacityInternalüö
-
java.util.ArrayListensureExplicitCapacityie

java.util.ArrayListgrowFB

java.util.ArrayscopyOf$ 

java.util.ArrayscopyOfÛ
<
+org.openjdk.jmh.runner.BaseBenchmarkHandlerstopProfilers≤´¨
4
"org.spf4j.stackmonitor.JmhProfilerafterIterationt´o
&
org.spf4j.stackmonitor.SamplerstopE´@

java.lang.Threadjoin$´

java.lang.Objectwait´´
1
(org.openjdk.jmh.runner.options.TimeValuesleepv¶q
&
java.util.concurrent.TimeUnitsleepG¶B

java.lang.Threadsleep%¶ 

java.lang.Threadsleep•q
&
java.util.concurrent.TimeUnitsleepGÃB

java.lang.Threadsleep%Ã 

java.lang.ThreadsleepÃÔ$

java.lang.Threadrun”$Ä˙Ã$
5
.java.util.concurrent.ThreadPoolExecutor$Workerruní$Ä˙ã$
4
'java.util.concurrent.ThreadPoolExecutor	runWorker“#Ä˙Ù
&
java.util.concurrent.FutureTaskrun…∂qö
A
9org.openjdk.jmh.runner.LoopBenchmarkHandler$BenchmarkTaskcall‘µqŒ
A
9org.openjdk.jmh.runner.LoopBenchmarkHandler$BenchmarkTaskcallàµqŸ
"
java.lang.reflect.Methodinvoke≤≥qø
2
(sun.reflect.DelegatingMethodAccessorImplinvokeà≤qÇ
.
$sun.reflect.GeneratedMethodAccessor4invokeœ≤q…
P
;org.spf4j.concurrent.generated.UIDGeneratorBenchmark_scaUidscaUid_ThroughputÙ≤qê
f
;org.spf4j.concurrent.generated.UIDGeneratorBenchmark_scaUid'_jmh_tryInit_f_uidgeneratorbenchmark0_G&"

java.lang.ObjectgetClassÒ
/
#org.openjdk.jmh.runner.InfraControlpreSetupΩ∏
,
#java.util.concurrent.CountDownLatchawaitáÇ
S
5java.util.concurrent.locks.AbstractQueuedSynchronizeracquireSharedInterruptibly™’
U
5java.util.concurrent.locks.AbstractQueuedSynchronizerdoAcquireSharedInterruptibly˚©
N
5java.util.concurrent.locks.AbstractQueuedSynchronizerparkAndCheckInterruptWS
.
&java.util.concurrent.locks.LockSupportpark!

sun.misc.Unsafepark 
B
5java.util.concurrent.locks.AbstractQueuedSynchronizer	addWaiterÉ
J
5java.util.concurrent.locks.AbstractQueuedSynchronizercompareAndSetTail1-
'
sun.misc.UnsafecompareAndSwapObjectN

java.lang.Threadinterrupted+'
!
java.lang.ThreadcurrentThreadà
2
#org.openjdk.jmh.runner.InfraControlpreTearDown—Ã
0
#java.util.concurrent.CountDownLatch	countDownóí
F
5java.util.concurrent.locks.AbstractQueuedSynchronizerreleaseShared«¬
<
(java.util.concurrent.CountDownLatch$SynctryReleaseSharedÅ}
K
5java.util.concurrent.locks.AbstractQueuedSynchronizercompareAndSetState.*
$
sun.misc.UnsafecompareAndSwapInt—
S
;org.spf4j.concurrent.generated.UIDGeneratorBenchmark_scaUidscaUid_thrpt_jmhStub˘ÿpÛ
4
*org.spf4j.concurrent.UIDGeneratorBenchmarkscaUid∫Ωm¥
)
!org.spf4j.concurrent.UIDGeneratornextÜÈZ
!
java.lang.StringBuilder<init>5≈0
)
java.lang.AbstractStringBuilder<init>≈s
#
java.lang.StringBuildertoStringLàG

java.lang.String<init>)U%

java.util.ArrayscopyOfRangeU@
9
!org.spf4j.concurrent.UIDGeneratorappendUnsignedStringòn
-
%org.spf4j.concurrent.ScalableSequencenext=9
3
&java.util.concurrent.atomic.AtomicLong	getAndAddæ
<
#org.openjdk.jmh.runner.InfraControlannounceWarmdownReady˝¯
>
%org.openjdk.jmh.runner.InfraControlL2announceWarmdownReadyµ∞
<
)java.util.concurrent.atomic.AtomicIntegerincrementAndGetpl
:
)java.util.concurrent.atomic.AtomicIntegercompareAndSet.*
$
sun.misc.UnsafecompareAndSwapInt«
4
*org.spf4j.concurrent.UIDGeneratorBenchmarkscaUidé<â
)
!org.spf4j.concurrent.UIDGeneratornext\X
!
java.lang.StringBuilder<init>3/
)
java.lang.AbstractStringBuilder<init>k
0
sun.reflect.ReflectionquickCheckMemberAccess73
-
sun.reflect.ReflectiongetClassAccessFlags'
!
java.lang.ThreadcurrentThread'
!
java.lang.ThreadcurrentThread‘
2
'java.util.concurrent.ThreadPoolExecutorgetTaskù àñ
0
(java.util.concurrent.LinkedBlockingQueuetake·
 à≥
2
(java.util.concurrent.locks.ReentrantLockunlock¸˜
@
5java.util.concurrent.locks.AbstractQueuedSynchronizerrelease≤≠
H
5java.util.concurrent.locks.AbstractQueuedSynchronizerunparkSuccessor‡Ç
P
5java.util.concurrent.locks.AbstractQueuedSynchronizercompareAndSetWaitStatus.*
$
sun.misc.UnsafecompareAndSwapIntW
0
&java.util.concurrent.locks.LockSupportunpark#

sun.misc.Unsafeunparkó
N
Ejava.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObjectawaitƒ∆à‰
F
5java.util.concurrent.locks.AbstractQueuedSynchronizeracquireQueuedôî
B
4java.util.concurrent.locks.ReentrantLock$NonfairSync
tryAcquireÕ»
B
-java.util.concurrent.locks.ReentrantLock$SyncnonfairTryAcquireÅ}
K
5java.util.concurrent.locks.AbstractQueuedSynchronizercompareAndSetState.*
$
sun.misc.UnsafecompareAndSwapIntW
.
&java.util.concurrent.locks.LockSupportpark%≈à

sun.misc.Unsafepark≈àä
O
Ejava.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObjectsignal∂±
Q
Ejava.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObjectdoSignal€÷
J
5java.util.concurrent.locks.AbstractQueuedSynchronizertransferForSignaláÇ
P
5java.util.concurrent.locks.AbstractQueuedSynchronizercompareAndSetWaitStatus.*
$
sun.misc.UnsafecompareAndSwapInt

java.lang.Systemgc–