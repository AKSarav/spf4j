<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="spf4j-zel"><sessioninfo id="ZMacBookPro.local-25720ae1" start="1398131584093" dump="1398131646838"/><package name="org/spf4j/zel/vm"><class name="org/spf4j/zel/vm/VMExecutor$Lazy$1"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="55"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="3"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/Memory"><method name="&lt;init&gt;" desc="([Ljava/lang/Object;Ljava/util/Map;)V" line="34"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMem" desc="()[Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSymbolTable" desc="()Ljava/util/Map;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/vm/NullParsingContext"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateCode" desc="([Lorg/spf4j/zel/instr/Instruction;)V" line="33"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAddress" desc="()I" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Ljava/lang/Object;)V" line="47"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProgramBuilder" desc="()Lorg/spf4j/zel/vm/ProgramBuilder;" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateCodeAll" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="56"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createSubContext" desc="()Lorg/spf4j/zel/vm/NullParsingContext;" line="60"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="staticSymbol" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="68"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/vm/ExecutionContext"><method name="suspend" desc="(Lorg/spf4j/zel/vm/VMFuture;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="suspend" desc="(Ljava/util/List;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/ExecutionContext;Lorg/spf4j/zel/vm/VMExecutor;Lorg/spf4j/zel/vm/Program;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/Program;[Ljava/lang/Object;Ljava/io/InputStream;Ljava/io/PrintStream;Ljava/io/PrintStream;Lorg/spf4j/zel/vm/VMExecutor;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCallable" desc="()Lorg/spf4j/zel/vm/VMExecutor$Suspendable;" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popSyncStackVal" desc="()Ljava/lang/Object;" line="195"><counter type="INSTRUCTION" missed="17" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popStackVals" desc="(I)[Ljava/lang/Object;" line="216"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNrStackVals" desc="()I" line="220"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="popSyncStackVals" desc="(I)[Ljava/lang/Object;" line="224"><counter type="INSTRUCTION" missed="17" covered="36"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popFirstAvail" desc="(I)Ljava/lang/Object;" line="247"><counter type="INSTRUCTION" missed="53" covered="59"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="14" covered="18"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pop" desc="()Ljava/lang/Object;" line="295"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="push" desc="(Ljava/lang/Object;)V" line="299"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAll" desc="([Ljava/lang/Object;)V" line="303"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStackEmpty" desc="()Z" line="307"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peek" desc="()Ljava/lang/Object;" line="311"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peekFromTop" desc="(I)Ljava/lang/Object;" line="315"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekElemAfter" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="319"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFromPtr" desc="(I)Ljava/lang/Object;" line="323"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubProgramContext" desc="(Lorg/spf4j/zel/vm/Program;[Ljava/lang/Object;)Lorg/spf4j/zel/vm/ExecutionContext;" line="328"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSyncSubProgramContext" desc="(Lorg/spf4j/zel/vm/Program;[Ljava/lang/Object;)Lorg/spf4j/zel/vm/ExecutionContext;" line="339"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="346"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isChildContext" desc="()Z" line="354"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="185" covered="288"/><counter type="BRANCH" missed="12" covered="20"/><counter type="LINE" missed="34" covered="80"/><counter type="COMPLEXITY" missed="15" covered="23"/><counter type="METHOD" missed="7" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/WildCardMatcher"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="13"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="match" desc="(Ljava/lang/String;)Z" line="26"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="match" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="38"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJavaRegexp" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="46" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWildcardMatcher" desc="(Ljava/lang/String;)Z" line="99"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="116"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="131"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="196" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/vm/Program"><method name="&lt;init&gt;" desc="(Ljava/util/Map;[Ljava/lang/Object;[Ljava/lang/Object;IILorg/spf4j/zel/vm/Program$Type;Lorg/spf4j/zel/vm/Program$ExecutionType;Z[Ljava/lang/String;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildSymTable" desc="([Ljava/lang/String;ILjava/util/Map;)Ljava/util/Map;" line="120"><counter type="INSTRUCTION" missed="24" covered="154"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocalMemSize" desc="()I" line="169"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="175"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="188"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasDeterministicFunctions" desc="()Z" line="192"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="200"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="205"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="210"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExecType" desc="()Lorg/spf4j/zel/vm/Program$ExecutionType;" line="214"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compile" desc="(Ljava/lang/String;[Ljava/lang/String;)Lorg/spf4j/zel/vm/Program;" line="227"><counter type="INSTRUCTION" missed="12" covered="15"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()Ljava/lang/Object;" line="239"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="243"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;)Ljava/lang/Object;" line="248"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeSingleThreaded" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="252"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/VMExecutor;Ljava/io/InputStream;Ljava/io/PrintStream;Ljava/io/PrintStream;[Ljava/lang/Object;)Ljava/lang/Object;" line="284"><counter type="INSTRUCTION" missed="11" covered="32"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeSyncOrAsync" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)Ljava/lang/Object;" line="300"><counter type="INSTRUCTION" missed="6" covered="29"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeAsync" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)Ljava/lang/Object;" line="318"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeSync" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)Ljava/lang/Object;" line="337"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)Ljava/lang/Object;" line="345"><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Ljava/io/InputStream;Ljava/io/PrintStream;Ljava/io/PrintStream;[Ljava/lang/Object;)Ljava/lang/Object;" line="360"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;" line="377"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addValue" desc="(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;)V" line="393"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="strIndent" desc="(I)Ljava/lang/String;" line="404"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dumpCore" desc="(Ljava/lang/String;Ljava/lang/Object;II)Ljava/lang/String;" line="423"><counter type="INSTRUCTION" missed="70" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="449"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="474"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lorg/spf4j/zel/vm/Program$Type;" line="492"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterNames" desc="()[Ljava/lang/String;" line="496"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Class;)Z" line="500"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="itterate" desc="(Lcom/google/common/base/Function;)Ljava/lang/Object;" line="518"><counter type="INSTRUCTION" missed="6" covered="58"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstructions" desc="()[Lorg/spf4j/zel/instr/Instruction;" line="540"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="259"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="366" covered="543"/><counter type="BRANCH" missed="42" covered="38"/><counter type="LINE" missed="75" covered="110"/><counter type="COMPLEXITY" missed="38" covered="35"/><counter type="METHOD" missed="13" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/ExecAbortException"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillInStackTrace" desc="()Ljava/lang/Throwable;" line="19"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/MemoryBuilder"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/Map;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSymbol" desc="(Ljava/lang/String;)V" line="48"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSymbol" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/spf4j/base/Pair;" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lorg/spf4j/zel/vm/MemoryBuilder;" line="70"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="92"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/ProgramBuilder"><method name="generateID" desc="()I" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/MemoryBuilder;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="intern" desc="([Ljava/lang/Object;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lorg/spf4j/zel/vm/Program$Type;" line="82"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setType" desc="(Lorg/spf4j/zel/vm/Program$Type;)Lorg/spf4j/zel/vm/ProgramBuilder;" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExecType" desc="(Lorg/spf4j/zel/vm/Program$ExecutionType;)Lorg/spf4j/zel/vm/ProgramBuilder;" line="94"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/spf4j/zel/instr/Instruction;)Lorg/spf4j/zel/vm/ProgramBuilder;" line="101"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Class;)Z" line="107"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="itterate" desc="(Lcom/google/common/base/Function;)Ljava/lang/Object;" line="125"><counter type="INSTRUCTION" missed="2" covered="58"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ILorg/spf4j/zel/instr/Instruction;)Lorg/spf4j/zel/vm/ProgramBuilder;" line="151"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="([Lorg/spf4j/zel/instr/Instruction;)Lorg/spf4j/zel/vm/ProgramBuilder;" line="158"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAll" desc="(I[Ljava/lang/Object;)Lorg/spf4j/zel/vm/ProgramBuilder;" line="165"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Lorg/spf4j/zel/vm/ProgramBuilder;)Lorg/spf4j/zel/vm/ProgramBuilder;" line="172"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)V" line="185"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="196"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="200"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasDeterministicFunctions" desc="()Z" line="204"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasAsyncCalls" desc="()Z" line="226"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toProgram" desc="([Ljava/lang/String;)Lorg/spf4j/zel/vm/Program;" line="249"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toProgram" desc="(Ljava/util/List;)Lorg/spf4j/zel/vm/Program;" line="261"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="91" covered="290"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="18" covered="61"/><counter type="COMPLEXITY" missed="8" covered="29"/><counter type="METHOD" missed="6" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/Address$Scope"><method name="values" desc="()[Lorg/spf4j/zel/vm/Address$Scope;" line="29"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lorg/spf4j/zel/vm/Address$Scope;" line="29"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/VMExecutor"><method name="synchronize" desc="(Lorg/spf4j/zel/vm/VMExecutor$Suspendable;)Lorg/spf4j/zel/vm/VMExecutor$Suspendable;" line="77"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Executor;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="submitNonSuspendable" desc="(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;" line="113"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="submit" desc="(Lorg/spf4j/zel/vm/VMExecutor$Suspendable;)Ljava/util/concurrent/Future;" line="119"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="submitInternal" desc="(Lorg/spf4j/zel/vm/VMExecutor$Suspendable;)Ljava/util/concurrent/Future;" line="133"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resumeSuspendables" desc="(Lorg/spf4j/zel/vm/VMFuture;)Ljava/util/List;" line="147"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSuspendable" desc="(Lorg/spf4j/zel/vm/VMFuture;Lorg/spf4j/zel/vm/VMExecutor$Suspendable;Lorg/spf4j/zel/vm/VMFuture;)V" line="159"><counter type="INSTRUCTION" missed="4" covered="70"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="submit" desc="(Lorg/spf4j/zel/vm/VMExecutor$Suspendable;Lorg/spf4j/zel/vm/VMFuture;)V" line="193"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="145"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="5" covered="37"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/ProgramBuilder$1"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/ProgramBuilder;Ljava/lang/Class;)V" line="107"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="112"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/vm/ProgramBuilder$3"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/ProgramBuilder;)V" line="226"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="230"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/ProgramBuilder$2"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/ProgramBuilder;)V" line="204"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="209"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/VMSyncFuture"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="(Z)Z" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCancelled" desc="()Z" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDone" desc="()Z" line="47"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResultStore" desc="()Lorg/spf4j/base/Pair;" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setResult" desc="(Ljava/lang/Object;)V" line="85"><counter type="INSTRUCTION" missed="5" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExceptionResult" desc="(Ljava/util/concurrent/ExecutionException;)V" line="94"><counter type="INSTRUCTION" missed="16" covered="5"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="80" covered="38"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="19" covered="12"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/CompileContext"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/MemoryBuilder;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateCode" desc="([Lorg/spf4j/zel/instr/Instruction;)V" line="37"><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateCodeAll" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAddress" desc="()I" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Ljava/lang/Object;)V" line="61"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProgramBuilder" desc="()Lorg/spf4j/zel/vm/ProgramBuilder;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSubContext" desc="()Lorg/spf4j/zel/vm/CompileContext;" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="staticSymbol" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/Address"><method name="&lt;init&gt;" desc="(ILorg/spf4j/zel/vm/Address$Scope;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAddress" desc="()I" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getScope" desc="()Lorg/spf4j/zel/vm/Address$Scope;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="50"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="59"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="32"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="7"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/VMExecutor$Lazy"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="17"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/VMASyncFuture"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="(Z)Z" line="36"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCancelled" desc="()Z" line="41"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDone" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResultStore" desc="()Lorg/spf4j/base/Pair;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setResult" desc="(Ljava/lang/Object;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExceptionResult" desc="(Ljava/util/concurrent/ExecutionException;)V" line="74"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/Program$1"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/Program;Ljava/lang/Class;)V" line="500"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="504"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/vm/SimpleStack"><method name="&lt;init&gt;" desc="(I)V" line="45"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="64"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="push" desc="(Ljava/lang/Object;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)V" line="80"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAll" desc="([Ljava/lang/Object;)V" line="99"><counter type="INSTRUCTION" missed="1" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pop" desc="()Ljava/lang/Object;" line="114"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pop" desc="(I)[Ljava/lang/Object;" line="121"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popUntil" desc="(Ljava/lang/Object;)[Ljava/lang/Object;" line="132"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peek" desc="()Ljava/lang/Object;" line="149"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peekFromTop" desc="(I)Ljava/lang/Object;" line="153"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peek" desc="(I)[Ljava/lang/Object;" line="158"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekUntil" desc="(Ljava/lang/Object;)[Ljava/lang/Object;" line="162"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peekElemAfter" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="170"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="182"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPtr" desc="()I" line="194"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFromPtr" desc="(I)Ljava/lang/Object;" line="204"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="(C)Ljava/lang/String;" line="218"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="232"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="237"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="242"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="247"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="252"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="257"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)Z" line="262"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="268"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z" line="273"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="278"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z" line="283"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z" line="288"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="293"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="308"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(ILjava/util/Collection;)Z" line="318"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="323"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(ILjava/lang/Object;)Ljava/lang/Object;" line="328"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(ILjava/lang/Object;)V" line="336"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(I)Ljava/lang/Object;" line="341"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I" line="346"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lastIndexOf" desc="(Ljava/lang/Object;)I" line="351"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="()Ljava/util/ListIterator;" line="356"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="(I)Ljava/util/ListIterator;" line="361"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subList" desc="(II)Ljava/util/List;" line="366"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="351" covered="164"/><counter type="BRANCH" missed="29" covered="7"/><counter type="LINE" missed="74" covered="35"/><counter type="COMPLEXITY" missed="48" covered="12"/><counter type="METHOD" missed="32" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/ZExecutionException"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Exception;Lorg/spf4j/zel/vm/ExecutionContext;)V" line="26"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Exception;)V" line="31"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Exception;)V" line="37"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="42"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/spf4j/zel/vm/ExecutionContext;" line="58"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/vm/VMExecutor$1"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/VMExecutor$Suspendable;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="3" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuspendedAt" desc="()Ljava/util/List;" line="101"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/VMExecutor$2"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/VMExecutor;Lorg/spf4j/zel/vm/VMExecutor$Suspendable;Lorg/spf4j/zel/vm/VMFuture;)V" line="193"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="198"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/ExecutionContext$1"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Object;" line="155"><counter type="INSTRUCTION" missed="24" covered="56"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuspendedAt" desc="()Ljava/util/List;" line="181"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="66"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="5" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/ResultCache"><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/Program$ExecutionType"><method name="values" desc="()[Lorg/spf4j/zel/vm/Program$ExecutionType;" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lorg/spf4j/zel/vm/Program$ExecutionType;" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/SimpleResultCache"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="49"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putPermanentResult" desc="(Lorg/spf4j/zel/vm/Program;Ljava/util/List;Ljava/lang/Object;)V" line="67"><counter type="INSTRUCTION" missed="8" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putTransientResult" desc="(Lorg/spf4j/zel/vm/Program;Ljava/util/List;Ljava/lang/Object;)V" line="79"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResult" desc="(Lorg/spf4j/zel/vm/Program;Ljava/util/List;Ljava/util/concurrent/Callable;)Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="8" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="65"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="10" covered="16"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/JavaMethodCall"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/String;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Lorg/spf4j/zel/vm/ExecutionContext;[Ljava/lang/Object;)Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="4" covered="118"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="146"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="2" covered="30"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/Program$Type"><method name="values" desc="()[Lorg/spf4j/zel/vm/Program$Type;" line="71"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lorg/spf4j/zel/vm/Program$Type;" line="71"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/Channel"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/VMExecutor;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="5" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/Object;)V" line="47"><counter type="INSTRUCTION" missed="10" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="62"><counter type="INSTRUCTION" missed="19" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="114"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="5" covered="32"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/SuspendedException"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillInStackTrace" desc="()Ljava/lang/Throwable;" line="28"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/SimpleResultCache$1"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/SimpleResultCache;I)V" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Lorg/spf4j/zel/vm/Program;)Lorg/spf4j/base/Pair;" line="58"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/SimpleResultCache$2"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/SimpleResultCache;Ljava/util/concurrent/Callable;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/CompileException"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="31"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/vm/Channel$Factory"><method name="&lt;init&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Lorg/spf4j/zel/vm/ExecutionContext;[Ljava/lang/Object;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ExecAbortException.java"><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleResultCache.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="1" cb="1"/><line nr="70" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="2" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="20" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="1" cb="1"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="1" cb="1"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="104"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="11" covered="22"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Channel.java"><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="2"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="1" cb="1"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="2"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="5" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="1" cb="1"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="5" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="123"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="5" covered="34"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Memory.java"><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ZExecutionException.java"><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="VMASyncFuture.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="2"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="2" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SuspendedException.java"><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Address.java"><line nr="29" mi="9" ci="29" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="13" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="2" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="2" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="9" ci="0" mb="2" cb="0"/><line nr="74" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="61"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="8"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="VMSyncFuture.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="5" mb="1" cb="1"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="4" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="7" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="1" cb="1"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="1" cb="1"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="2" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="80" covered="38"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="19" covered="12"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResultCache.java"><line nr="40" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NullParsingContext.java"><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MemoryBuilder.java"><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="2" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="13" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="2"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="14" mb="0" cb="0"/><line nr="59" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="70" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="92"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleStack.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="5" mb="1" cb="1"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="2"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="1" cb="1"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="11" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="11" mb="0" cb="2"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="2" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="9" ci="0" mb="0" cb="0"/><line nr="137" mi="7" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="8" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="10" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="6" ci="0" mb="2" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="9" ci="0" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="6" ci="0" mb="2" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="7" ci="0" mb="0" cb="0"/><line nr="182" mi="8" ci="0" mb="2" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="6" ci="0" mb="4" cb="0"/><line nr="205" mi="16" ci="0" mb="0" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="2" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="7" ci="0" mb="0" cb="0"/><line nr="223" mi="8" ci="0" mb="2" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="7" ci="0" mb="0" cb="0"/><line nr="227" mi="3" ci="0" mb="0" cb="0"/><line nr="232" mi="4" ci="0" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="5" ci="0" mb="0" cb="0"/><line nr="247" mi="5" ci="0" mb="0" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="0" cb="0"/><line nr="262" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="5" ci="0" mb="0" cb="0"/><line nr="273" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="5" ci="0" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="0" cb="0"/><line nr="293" mi="2" ci="0" mb="2" cb="0"/><line nr="294" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="5" ci="0" mb="2" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="5" ci="0" mb="2" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="9" ci="0" mb="0" cb="0"/><line nr="308" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="8" ci="0" mb="2" cb="0"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="311" mi="11" ci="0" mb="2" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="328" mi="3" ci="0" mb="0" cb="0"/><line nr="329" mi="5" ci="0" mb="0" cb="0"/><line nr="330" mi="5" ci="0" mb="0" cb="0"/><line nr="331" mi="2" ci="0" mb="0" cb="0"/><line nr="336" mi="5" ci="0" mb="0" cb="0"/><line nr="341" mi="5" ci="0" mb="0" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="351" mi="5" ci="0" mb="0" cb="0"/><line nr="356" mi="5" ci="0" mb="0" cb="0"/><line nr="361" mi="5" ci="0" mb="0" cb="0"/><line nr="366" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="351" covered="164"/><counter type="BRANCH" missed="29" covered="7"/><counter type="LINE" missed="74" covered="35"/><counter type="COMPLEXITY" missed="48" covered="12"/><counter type="METHOD" missed="32" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Program.java"><line nr="71" mi="5" ci="21" mb="0" cb="0"/><line nr="72" mi="0" ci="12" mb="0" cb="0"/><line nr="75" mi="9" ci="17" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="16" mb="0" cb="2"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="1" cb="1"/><line nr="125" mi="12" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="2"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="1" cb="1"/><line nr="137" mi="12" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="2"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="2"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="2"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="0" ci="8" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="2" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="2" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="9" ci="0" mb="2" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="1" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="0" cb="0"/><line nr="243" mi="0" ci="7" mb="0" cb="0"/><line nr="248" mi="0" ci="11" mb="0" cb="0"/><line nr="252" mi="0" ci="8" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="11" mb="0" cb="0"/><line nr="285" mi="0" ci="8" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="3" ci="2" mb="3" cb="1"/><line nr="290" mi="2" ci="2" mb="0" cb="0"/><line nr="292" mi="2" ci="2" mb="3" cb="1"/><line nr="293" mi="4" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="8" mb="1" cb="3"/><line nr="302" mi="0" ci="3" mb="0" cb="2"/><line nr="303" mi="0" ci="6" mb="0" cb="0"/><line nr="305" mi="0" ci="6" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="1" ci="0" mb="0" cb="0"/><line nr="311" mi="5" ci="0" mb="0" cb="0"/><line nr="318" mi="3" ci="0" mb="0" cb="0"/><line nr="319" mi="3" ci="0" mb="2" cb="0"/><line nr="320" mi="3" ci="0" mb="2" cb="0"/><line nr="321" mi="6" ci="0" mb="0" cb="0"/><line nr="323" mi="6" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="5" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="339" mi="5" ci="0" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="2"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="1" ci="0" mb="0" cb="0"/><line nr="350" mi="5" ci="0" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="2"/><line nr="361" mi="0" ci="9" mb="0" cb="0"/><line nr="363" mi="0" ci="8" mb="0" cb="0"/><line nr="377" mi="19" ci="0" mb="0" cb="0"/><line nr="393" mi="23" ci="0" mb="0" cb="0"/><line nr="394" mi="1" ci="0" mb="0" cb="0"/><line nr="404" mi="4" ci="0" mb="0" cb="0"/><line nr="405" mi="7" ci="0" mb="2" cb="0"/><line nr="406" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="3" ci="0" mb="0" cb="0"/><line nr="423" mi="2" ci="0" mb="2" cb="0"/><line nr="424" mi="2" ci="0" mb="0" cb="0"/><line nr="426" mi="5" ci="0" mb="4" cb="0"/><line nr="427" mi="2" ci="0" mb="0" cb="0"/><line nr="429" mi="4" ci="0" mb="0" cb="0"/><line nr="430" mi="3" ci="0" mb="2" cb="0"/><line nr="431" mi="9" ci="0" mb="0" cb="0"/><line nr="432" mi="12" ci="0" mb="2" cb="0"/><line nr="433" mi="13" ci="0" mb="0" cb="0"/><line nr="434" mi="2" ci="0" mb="0" cb="0"/><line nr="436" mi="13" ci="0" mb="0" cb="0"/><line nr="438" mi="3" ci="0" mb="0" cb="0"/><line nr="449" mi="3" ci="0" mb="0" cb="0"/><line nr="450" mi="2" ci="0" mb="0" cb="0"/><line nr="451" mi="6" ci="0" mb="0" cb="0"/><line nr="452" mi="5" ci="0" mb="0" cb="0"/><line nr="453" mi="2" ci="0" mb="2" cb="0"/><line nr="454" mi="3" ci="0" mb="0" cb="0"/><line nr="455" mi="3" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="2" cb="0"/><line nr="457" mi="5" ci="0" mb="2" cb="0"/><line nr="458" mi="3" ci="0" mb="0" cb="0"/><line nr="461" mi="12" ci="0" mb="0" cb="0"/><line nr="462" mi="1" ci="0" mb="0" cb="0"/><line nr="463" mi="11" ci="0" mb="0" cb="0"/><line nr="464" mi="1" ci="0" mb="0" cb="0"/><line nr="465" mi="11" ci="0" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="469" mi="1" ci="0" mb="0" cb="0"/><line nr="470" mi="1" ci="0" mb="0" cb="0"/><line nr="474" mi="0" ci="4" mb="0" cb="0"/><line nr="475" mi="0" ci="4" mb="0" cb="0"/><line nr="476" mi="0" ci="9" mb="0" cb="2"/><line nr="477" mi="0" ci="5" mb="0" cb="0"/><line nr="478" mi="0" ci="8" mb="0" cb="0"/><line nr="479" mi="0" ci="4" mb="0" cb="0"/><line nr="480" mi="0" ci="4" mb="0" cb="0"/><line nr="481" mi="0" ci="4" mb="0" cb="0"/><line nr="483" mi="0" ci="14" mb="0" cb="0"/><line nr="484" mi="0" ci="14" mb="0" cb="0"/><line nr="485" mi="0" ci="3" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="0"/><line nr="496" mi="3" ci="0" mb="0" cb="0"/><line nr="500" mi="18" ci="0" mb="0" cb="0"/><line nr="504" mi="5" ci="0" mb="2" cb="0"/><line nr="505" mi="2" ci="0" mb="0" cb="0"/><line nr="507" mi="2" ci="0" mb="0" cb="0"/><line nr="510" mi="2" ci="0" mb="2" cb="0"/><line nr="511" mi="2" ci="0" mb="0" cb="0"/><line nr="513" mi="3" ci="0" mb="0" cb="0"/><line nr="518" mi="0" ci="17" mb="0" cb="2"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="520" mi="0" ci="2" mb="1" cb="1"/><line nr="521" mi="2" ci="0" mb="0" cb="0"/><line nr="523" mi="0" ci="17" mb="0" cb="2"/><line nr="524" mi="0" ci="4" mb="0" cb="0"/><line nr="525" mi="0" ci="2" mb="1" cb="1"/><line nr="526" mi="2" ci="0" mb="0" cb="0"/><line nr="528" mi="0" ci="3" mb="0" cb="2"/><line nr="529" mi="0" ci="5" mb="0" cb="0"/><line nr="531" mi="0" ci="2" mb="1" cb="1"/><line nr="532" mi="2" ci="0" mb="0" cb="0"/><line nr="536" mi="0" ci="2" mb="0" cb="0"/><line nr="540" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="398" covered="605"/><counter type="BRANCH" missed="44" covered="38"/><counter type="LINE" missed="78" covered="115"/><counter type="COMPLEXITY" missed="44" covered="40"/><counter type="METHOD" missed="18" covered="25"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="WildCardMatcher.java"><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="2" cb="0"/><line nr="44" mi="3" ci="0" mb="2" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="2" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="2" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="2" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="2" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="4" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="7" ci="0" mb="2" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="4" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="12" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="2" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="2" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="17" ci="0" mb="6" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="13" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="196" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="JavaMethodCall.java"><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="2"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="2"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="2"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="2"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="1" cb="1"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="2"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="12" mb="0" cb="0"/><line nr="84" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="146"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="2" covered="30"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExecutionContext.java"><line nr="95" mi="0" ci="9" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="2"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="11" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="1" cb="1"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="2"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="10" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="1" cb="1"/><line nr="166" mi="0" ci="8" mb="0" cb="0"/><line nr="167" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="14" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="2"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="2"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="207" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="2"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="2"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="1" cb="1"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="239" mi="5" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="7" mb="1" cb="1"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="1" cb="1"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="2"/><line nr="258" mi="0" ci="3" mb="1" cb="1"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="2" cb="0"/><line nr="264" mi="8" ci="0" mb="0" cb="0"/><line nr="266" mi="10" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="2"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="0" cb="0"/><line nr="277" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="3" ci="0" mb="2" cb="0"/><line nr="281" mi="2" ci="0" mb="2" cb="0"/><line nr="282" mi="4" ci="0" mb="0" cb="0"/><line nr="284" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="3" ci="0" mb="2" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="290" mi="3" ci="0" mb="0" cb="0"/><line nr="291" mi="4" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="4" ci="0" mb="0" cb="0"/><line nr="304" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="4" ci="0" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="4" mb="0" cb="2"/><line nr="329" mi="0" ci="8" mb="0" cb="0"/><line nr="331" mi="0" ci="8" mb="0" cb="0"/><line nr="333" mi="0" ci="8" mb="0" cb="0"/><line nr="334" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="7" ci="0" mb="0" cb="0"/><line nr="340" mi="8" ci="0" mb="0" cb="0"/><line nr="341" mi="2" ci="0" mb="0" cb="0"/><line nr="346" mi="58" ci="0" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="209" covered="354"/><counter type="BRANCH" missed="14" covered="24"/><counter type="LINE" missed="39" covered="93"/><counter type="COMPLEXITY" missed="17" covered="27"/><counter type="METHOD" missed="7" covered="18"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="CompileException.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="VMExecutor.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="1" cb="1"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="3" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="2"/><line nr="149" mi="0" ci="10" mb="0" cb="2"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="2"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="1" cb="1"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="2"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="1" cb="1"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="1" cb="1"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="21" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="12" mb="0" cb="2"/><line nr="203" mi="0" ci="8" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="7" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="275"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="11" covered="65"/><counter type="COMPLEXITY" missed="7" covered="21"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="ProgramBuilder.java"><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="2"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="2"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="11" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="18" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="2" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="2"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="2"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="17" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="2"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="1" cb="1"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="9" mb="0" cb="0"/><line nr="160" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="8" ci="0" mb="0" cb="0"/><line nr="167" mi="9" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="10" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="2"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="14" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="2"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="1" cb="3"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="2"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="14" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="2"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="2"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="2"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="2"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="36" mb="0" cb="6"/><line nr="261" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="109" covered="339"/><counter type="BRANCH" missed="6" covered="40"/><counter type="LINE" missed="21" covered="73"/><counter type="COMPLEXITY" missed="12" covered="38"/><counter type="METHOD" missed="8" covered="19"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="CompileContext.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="1" cb="1"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1691" covered="2392"/><counter type="BRANCH" missed="169" covered="161"/><counter type="LINE" missed="369" covered="532"/><counter type="COMPLEXITY" missed="215" covered="203"/><counter type="METHOD" missed="113" covered="139"/><counter type="CLASS" missed="7" covered="29"/></package><package name="org/spf4j/zel/instr"><class name="org/spf4j/zel/instr/NOT"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="40"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/MOV"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="36"><counter type="INSTRUCTION" missed="12" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/NOP"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/GT"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="39"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/DEC"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="49"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/GE"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="37"><counter type="INSTRUCTION" missed="1" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="49"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/SLEEP"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="42"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="38" covered="10"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/LODAX"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="42"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSymbol" desc="()Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/MCTX"><method name="&lt;init&gt;" desc="(I)V" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="48"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/CALLA"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="47"><counter type="INSTRUCTION" missed="67" covered="36"/><counter type="BRANCH" missed="5" covered="2"/><counter type="LINE" missed="13" covered="9"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="110"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="106"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="67" covered="46"/><counter type="BRANCH" missed="5" covered="2"/><counter type="LINE" missed="13" covered="13"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/SWAP"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="36"><counter type="INSTRUCTION" missed="16" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="41"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/JMP"><method name="&lt;init&gt;" desc="(I)V" line="29"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="40"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/OR"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="37"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/CALLREF$2"><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/DUP"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="41"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/CALLREF$1"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/instr/CALLREF;Lorg/spf4j/zel/vm/ExecutionContext;Ljava/lang/Object;[Ljava/lang/Object;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assign" desc="(Ljava/lang/Object;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="110" covered="17"/><counter type="BRANCH" missed="5" covered="2"/><counter type="LINE" missed="17" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="110" covered="44"/><counter type="BRANCH" missed="5" covered="2"/><counter type="LINE" missed="17" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/POW"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="39"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/CALL"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="45"><counter type="INSTRUCTION" missed="61" covered="78"/><counter type="BRANCH" missed="2" covered="5"/><counter type="LINE" missed="8" covered="20"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParamsSync" desc="(Lorg/spf4j/zel/vm/ExecutionContext;Ljava/lang/Integer;)[Ljava/lang/Object;" line="94"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParams" desc="(Lorg/spf4j/zel/vm/ExecutionContext;Ljava/lang/Integer;)[Ljava/lang/Object;" line="105"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="117"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="113"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="61" covered="115"/><counter type="BRANCH" missed="2" covered="5"/><counter type="LINE" missed="8" covered="34"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/INC"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="51"><counter type="INSTRUCTION" missed="7" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/CALL$1"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/instr/CALL;Lorg/spf4j/zel/vm/ExecutionContext;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/ADD"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="48"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/PUSH"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/CALL$2"><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/SLEEP$1"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/instr/SLEEP;Lorg/spf4j/zel/vm/ExecutionContext;Lorg/spf4j/zel/vm/VMASyncFuture;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="50"><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/CALLREF"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="45"><counter type="INSTRUCTION" missed="6" covered="26"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="117"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="113"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="36"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/FJMP"><method name="&lt;init&gt;" desc="(I)V" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="40"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/DEREF"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="45"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushDeref" desc="(Ljava/lang/Object;Ljava/lang/Object;Lorg/spf4j/zel/vm/ExecutionContext;)V" line="51"><counter type="INSTRUCTION" missed="64" covered="65"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="6" covered="14"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="89"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="6" covered="21"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/SUB"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="39"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/MOD"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="44"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/LE"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="37"><counter type="INSTRUCTION" missed="1" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/FIRST"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="46"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/LT"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="40"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/HALT"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/AND"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="39"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/SYNC"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/DEREFX"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/Instruction"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInstruction" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/spf4j/zel/instr/Instruction;" line="71"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="28"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="13" covered="4"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/LODXF"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/Address;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="44"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/LODAXF"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/Address;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/MUL"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="45"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/EQ"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="38"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="49"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/REF"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="46"><counter type="INSTRUCTION" missed="2" covered="66"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="112"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="76"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/XOR"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="41"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/NEQ"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="42"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/CALLA$1"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/instr/CALLA;Lorg/spf4j/zel/vm/ExecutionContext;)V" line="58"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/CALLA$2"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/instr/CALLA;Ljava/lang/Object;Lorg/spf4j/zel/vm/ExecutionContext;[Ljava/lang/Object;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuspendedAt" desc="()Ljava/util/List;" line="92"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="24"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/CALLREF$1$1"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/instr/CALLREF$1;Lorg/spf4j/zel/vm/ExecutionContext;)V" line="74"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/CALLA$3"><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/DIV"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="40"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/LODAXF$1"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/instr/LODAXF;Lorg/spf4j/zel/vm/ExecutionContext;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assign" desc="(Ljava/lang/Object;)V" line="49"><counter type="INSTRUCTION" missed="14" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="50"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/REF$1"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/instr/REF;Ljava/lang/Object;Ljava/lang/Object;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assign" desc="(Ljava/lang/Object;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/REF$2"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/instr/REF;Ljava/lang/Object;Ljava/lang/Object;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assign" desc="(Ljava/lang/Object;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="84"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/REF$3"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/instr/REF;Ljava/lang/Object;Ljava/lang/Object;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assign" desc="(Ljava/lang/Object;)V" line="93"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="()Ljava/lang/Object;" line="99"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="21"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/LODX"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lorg/spf4j/zel/vm/ExecutionContext;)I" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSymbol" desc="()Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameters" desc="()[Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GT.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="2" ci="13" mb="1" cb="1"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HALT.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LT.java"><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="15" mb="0" cb="2"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="REF.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="1" cb="1"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="2"/><line nr="61" mi="0" ci="21" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="21" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="89" mi="0" ci="20" mb="0" cb="0"/><line nr="93" mi="22" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="9" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="151"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="NOP.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="DIV.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CALL.java"><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="2" ci="23" mb="1" cb="2"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="21" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="1" cb="1"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="13" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="13" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="13" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="12" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="63" covered="145"/><counter type="BRANCH" missed="2" covered="5"/><counter type="LINE" missed="8" covered="35"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="LODX.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OR.java"><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="10" ci="0" mb="4" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GE.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="1" ci="14" mb="1" cb="1"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="INC.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="1" cb="1"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NEQ.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="14" mb="0" cb="2"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DEREFX.java"><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FIRST.java"><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SLEEP.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="2" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="12" ci="12" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="1" cb="1"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="30"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="11" covered="7"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MOD.java"><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="10" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Instruction.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="2"/><line nr="60" mi="0" ci="17" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="12" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="16" ci="0" mb="2" cb="0"/><line nr="77" mi="5" ci="0" mb="2" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="28"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="13" covered="4"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EQ.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AND.java"><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="18" ci="0" mb="4" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SUB.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ADD.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MOV.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="1" cb="1"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="12" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DUP.java"><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PUSH.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JMP.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="POW.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DEC.java"><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="2" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="7" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LODAX.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NOT.java"><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="11" ci="0" mb="2" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CALLREF.java"><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="24" mb="0" cb="0"/><line nr="59" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="1" cb="1"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="25" ci="0" mb="3" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="23" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="1" cb="1"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="14" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="14" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="98" mi="14" ci="0" mb="0" cb="0"/><line nr="101" mi="13" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="148" covered="80"/><counter type="BRANCH" missed="5" covered="2"/><counter type="LINE" missed="21" covered="15"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="2" covered="2"/></sourcefile><sourcefile name="MCTX.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="2" cb="2"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SYNC.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LE.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="1" ci="14" mb="1" cb="1"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LODAXF.java"><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="16" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="1" cb="1"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="14" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="2"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="73"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FJMP.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="2"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XOR.java"><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="MUL.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DEREF.java"><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="2"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="7" mb="1" cb="3"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="1" cb="1"/><line nr="60" mi="11" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="1" cb="1"/><line nr="62" mi="11" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="1" cb="1"/><line nr="64" mi="11" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="1" cb="1"/><line nr="66" mi="11" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="1" cb="1"/><line nr="68" mi="11" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="1" cb="1"/><line nr="70" mi="9" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="89"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="6" covered="21"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LODXF.java"><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SWAP.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="2" cb="2"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="16" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="41"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CALLA.java"><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="1" cb="1"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="25" ci="0" mb="3" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="21" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="3" mb="1" cb="1"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="26" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="12" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="110" covered="70"/><counter type="BRANCH" missed="5" covered="2"/><counter type="LINE" missed="17" covered="14"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="2" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="812" covered="1329"/><counter type="BRANCH" missed="49" covered="52"/><counter type="LINE" missed="150" covered="329"/><counter type="COMPLEXITY" missed="83" covered="158"/><counter type="METHOD" missed="45" covered="143"/><counter type="CLASS" missed="12" covered="42"/></package><package name="org/spf4j/zel/instr/var"><class name="org/spf4j/zel/instr/var/MIN"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Lorg/spf4j/zel/vm/ExecutionContext;[Ljava/lang/Object;)Ljava/lang/Object;" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/var/MAX"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Lorg/spf4j/zel/vm/ExecutionContext;[Ljava/lang/Object;)Ljava/lang/Object;" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/var/SQRT"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Lorg/spf4j/zel/vm/ExecutionContext;[Ljava/lang/Object;)Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/var/INT"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Lorg/spf4j/zel/vm/ExecutionContext;[Ljava/lang/Object;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/var/LOG10"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invoke" desc="(Lorg/spf4j/zel/vm/ExecutionContext;[Ljava/lang/Object;)Ljava/lang/Object;" line="39"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/instr/var/ARRAY"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Lorg/spf4j/zel/vm/ExecutionContext;[Ljava/lang/Object;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/var/LOG"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Lorg/spf4j/zel/vm/ExecutionContext;[Ljava/lang/Object;)Ljava/lang/Object;" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/var/OUT"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Lorg/spf4j/zel/vm/ExecutionContext;[Ljava/lang/Object;)Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="5" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/instr/var/RANDOM"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Lorg/spf4j/zel/vm/ExecutionContext;[Ljava/lang/Object;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RANDOM.java"><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OUT.java"><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="16" mb="0" cb="2"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="5" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MIN.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="INT.java"><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MAX.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LOG10.java"><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ARRAY.java"><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SQRT.java"><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LOG.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="21" covered="133"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="36"/><counter type="COMPLEXITY" missed="3" covered="25"/><counter type="METHOD" missed="3" covered="24"/><counter type="CLASS" missed="1" covered="8"/></package><package name="org/spf4j/zel/operators"><class name="org/spf4j/zel/operators/BigDecimalOperators$Mod"><method name="&lt;init&gt;" desc="()V" line="125"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/math/BigDecimal;Ljava/lang/Number;)Ljava/lang/Number;" line="129"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="3"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="14" covered="1"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/LongOperators$Mod"><method name="&lt;init&gt;" desc="()V" line="137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Long;Ljava/lang/Number;)Ljava/lang/Number;" line="141"><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="3"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="1"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/LongOperators"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="powLongInt" desc="(Ljava/lang/Long;Ljava/lang/Number;)Ljava/lang/Number;" line="190"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/operators/BigIntegerOperators$Add"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/math/BigInteger;Ljava/lang/Number;)Ljava/lang/Number;" line="33"><counter type="INSTRUCTION" missed="37" covered="46"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="49"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/DoubleOperators$Div"><method name="&lt;init&gt;" desc="()V" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Double;Ljava/lang/Number;)Ljava/lang/Number;" line="104"><counter type="INSTRUCTION" missed="76" covered="15"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="11" covered="3"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="76" covered="18"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="11" covered="4"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/LongOperators$Add"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Long;Ljava/lang/Number;)Ljava/lang/Number;" line="23"><counter type="INSTRUCTION" missed="67" covered="53"/><counter type="BRANCH" missed="15" covered="9"/><counter type="LINE" missed="9" covered="7"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="67" covered="56"/><counter type="BRANCH" missed="15" covered="9"/><counter type="LINE" missed="9" covered="8"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/IntegerOperators$Add"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Integer;Ljava/lang/Number;)Ljava/lang/Number;" line="34"><counter type="INSTRUCTION" missed="89" covered="57"/><counter type="BRANCH" missed="17" covered="9"/><counter type="LINE" missed="14" covered="9"/><counter type="COMPLEXITY" missed="11" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="89" covered="60"/><counter type="BRANCH" missed="17" covered="9"/><counter type="LINE" missed="14" covered="10"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/BigIntegerOperators$Pow"><method name="&lt;init&gt;" desc="()V" line="140"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/math/BigInteger;Ljava/lang/Number;)Ljava/lang/Number;" line="144"><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="98" covered="3"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="16" covered="1"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/BigIntegerOperators"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/operators/BigDecimalOperators$Sub"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/math/BigDecimal;Ljava/lang/Number;)Ljava/lang/Number;" line="57"><counter type="INSTRUCTION" missed="109" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="109" covered="3"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="14" covered="1"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/DoubleOperators$Sub"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Double;Ljava/lang/Number;)Ljava/lang/Number;" line="56"><counter type="INSTRUCTION" missed="75" covered="15"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="11" covered="3"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="75" covered="18"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="11" covered="4"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/IntegerOperators$Pow"><method name="&lt;init&gt;" desc="()V" line="202"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Integer;Ljava/lang/Number;)Ljava/lang/Number;" line="206"><counter type="INSTRUCTION" missed="94" covered="11"/><counter type="BRANCH" missed="19" covered="1"/><counter type="LINE" missed="13" covered="3"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="94" covered="14"/><counter type="BRANCH" missed="19" covered="1"/><counter type="LINE" missed="13" covered="4"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/DoubleOperators$Pow"><method name="&lt;init&gt;" desc="()V" line="148"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Double;Ljava/lang/Number;)Ljava/lang/Number;" line="152"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/LongOperators$Mul"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Long;Ljava/lang/Number;)Ljava/lang/Number;" line="79"><counter type="INSTRUCTION" missed="141" covered="41"/><counter type="BRANCH" missed="30" covered="2"/><counter type="LINE" missed="17" covered="6"/><counter type="COMPLEXITY" missed="16" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="141" covered="44"/><counter type="BRANCH" missed="30" covered="2"/><counter type="LINE" missed="17" covered="7"/><counter type="COMPLEXITY" missed="16" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/DoubleOperators$Mul"><method name="&lt;init&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Double;Ljava/lang/Number;)Ljava/lang/Number;" line="80"><counter type="INSTRUCTION" missed="76" covered="15"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="11" covered="3"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="76" covered="18"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="11" covered="4"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/Operator$Enum"><method name="values" desc="()[Lorg/spf4j/zel/operators/Operator$Enum;" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lorg/spf4j/zel/operators/Operator$Enum;" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/IntegerOperators$Sub"><method name="&lt;init&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Integer;Ljava/lang/Number;)Ljava/lang/Number;" line="71"><counter type="INSTRUCTION" missed="79" covered="68"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="12" covered="11"/><counter type="COMPLEXITY" missed="12" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="79" covered="71"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="12" covered="12"/><counter type="COMPLEXITY" missed="12" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/Operator$1"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialValue" desc="()Ljava/math/MathContext;" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/BigDecimalOperators$Mul"><method name="&lt;init&gt;" desc="()V" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/math/BigDecimal;Ljava/lang/Number;)Ljava/lang/Number;" line="81"><counter type="INSTRUCTION" missed="90" covered="18"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="11" covered="3"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="90" covered="21"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="11" covered="4"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/IntegerOperators$Mul"><method name="&lt;init&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Integer;Ljava/lang/Number;)Ljava/lang/Number;" line="108"><counter type="INSTRUCTION" missed="165" covered="25"/><counter type="BRANCH" missed="32" covered="2"/><counter type="LINE" missed="24" covered="5"/><counter type="COMPLEXITY" missed="17" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="165" covered="28"/><counter type="BRANCH" missed="32" covered="2"/><counter type="LINE" missed="24" covered="6"/><counter type="COMPLEXITY" missed="17" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/BigIntegerOperators$Mul"><method name="&lt;init&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/math/BigInteger;Ljava/lang/Number;)Ljava/lang/Number;" line="77"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="84" covered="3"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="1"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/LongOperators$Sub"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Long;Ljava/lang/Number;)Ljava/lang/Number;" line="51"><counter type="INSTRUCTION" missed="84" covered="37"/><counter type="BRANCH" missed="20" covered="4"/><counter type="LINE" missed="10" covered="6"/><counter type="COMPLEXITY" missed="12" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="84" covered="40"/><counter type="BRANCH" missed="20" covered="4"/><counter type="LINE" missed="10" covered="7"/><counter type="COMPLEXITY" missed="12" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/BigDecimalOperators$Pow"><method name="&lt;init&gt;" desc="()V" line="149"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/math/BigDecimal;Ljava/lang/Number;)Ljava/lang/Number;" line="153"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="3"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/BigDecimalOperators"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/operators/BigIntegerOperators$Sub"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/math/BigInteger;Ljava/lang/Number;)Ljava/lang/Number;" line="55"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="84" covered="3"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="1"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/DoubleOperators"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/operators/BigDecimalOperators$Add"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/math/BigDecimal;Ljava/lang/Number;)Ljava/lang/Number;" line="33"><counter type="INSTRUCTION" missed="66" covered="43"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="66" covered="46"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="7" covered="8"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/BigIntegerOperators$Div"><method name="&lt;init&gt;" desc="()V" line="96"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/math/BigInteger;Ljava/lang/Number;)Ljava/lang/Number;" line="100"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="88" covered="3"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="1"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/IntegerOperators$Mod"><method name="&lt;init&gt;" desc="()V" line="177"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Integer;Ljava/lang/Number;)Ljava/lang/Number;" line="181"><counter type="INSTRUCTION" missed="102" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="3"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="15" covered="1"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/IntegerOperators"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="powIntInt" desc="(Ljava/lang/Integer;Ljava/lang/Number;)Ljava/lang/Number;" line="233"><counter type="INSTRUCTION" missed="9" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/LongOperators$Pow"><method name="&lt;init&gt;" desc="()V" line="159"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Long;Ljava/lang/Number;)Ljava/lang/Number;" line="163"><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="103" covered="3"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="16" covered="1"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/LongOperators$Div"><method name="&lt;init&gt;" desc="()V" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Long;Ljava/lang/Number;)Ljava/lang/Number;" line="119"><counter type="INSTRUCTION" missed="78" covered="14"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="9" covered="3"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="78" covered="17"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="9" covered="4"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/BigIntegerOperators$Mod"><method name="&lt;init&gt;" desc="()V" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/math/BigInteger;Ljava/lang/Number;)Ljava/lang/Number;" line="122"><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="78" covered="3"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="12" covered="1"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/DoubleOperators$Add"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Double;Ljava/lang/Number;)Ljava/lang/Number;" line="32"><counter type="INSTRUCTION" missed="48" covered="42"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="45"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="8" covered="7"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/IntegerOperators$Div"><method name="&lt;init&gt;" desc="()V" line="150"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Integer;Ljava/lang/Number;)Ljava/lang/Number;" line="154"><counter type="INSTRUCTION" missed="64" covered="48"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="10" covered="7"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="51"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="10" covered="8"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/DoubleOperators$Mod"><method name="&lt;init&gt;" desc="()V" line="124"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/lang/Double;Ljava/lang/Number;)Ljava/lang/Number;" line="128"><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="3"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="14" covered="1"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/Operator"><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/BigDecimalOperators$Div"><method name="&lt;init&gt;" desc="()V" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="op" desc="(Ljava/math/BigDecimal;Ljava/lang/Number;)Ljava/lang/Number;" line="105"><counter type="INSTRUCTION" missed="90" covered="18"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="11" covered="3"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="90" covered="21"/><counter type="BRANCH" missed="17" covered="1"/><counter type="LINE" missed="11" covered="4"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/operators/Operators"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lorg/spf4j/zel/operators/Operator$Enum;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="17" covered="143"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="5" covered="20"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="155"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="6" covered="21"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BigIntegerOperators.java"><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="20" mb="4" cb="6"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="1" cb="1"/><line nr="38" mi="8" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="1" cb="1"/><line nr="40" mi="8" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="1" cb="1"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="2" cb="0"/><line nr="44" mi="11" ci="0" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="20" ci="0" mb="10" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="2" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="2" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="2" cb="0"/><line nr="66" mi="11" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="20" ci="0" mb="10" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="2" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="2" cb="0"/><line nr="85" mi="9" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="2" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="2" cb="0"/><line nr="89" mi="11" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="20" ci="0" mb="10" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="2" cb="0"/><line nr="105" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="2" cb="0"/><line nr="107" mi="9" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="2" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="2" cb="0"/><line nr="111" mi="13" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="20" ci="0" mb="10" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="2" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="2" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="2" cb="0"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="2" cb="0"/><line nr="133" mi="8" ci="0" mb="0" cb="0"/><line nr="135" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="16" ci="0" mb="8" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="149" mi="6" ci="0" mb="2" cb="0"/><line nr="150" mi="9" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="2" cb="0"/><line nr="155" mi="8" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="2" cb="0"/><line nr="157" mi="8" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="2" cb="0"/><line nr="159" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="2" cb="0"/><line nr="161" mi="7" ci="0" mb="0" cb="0"/><line nr="163" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="472" covered="64"/><counter type="BRANCH" missed="101" covered="9"/><counter type="LINE" missed="71" covered="13"/><counter type="COMPLEXITY" missed="60" covered="8"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="1" covered="6"/></sourcefile><sourcefile name="IntegerOperators.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="16" mb="3" cb="5"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="2"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="1" cb="1"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="20" ci="0" mb="6" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="1" cb="1"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="2" cb="0"/><line nr="56" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="2" cb="0"/><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="2" cb="0"/><line nr="60" mi="11" ci="0" mb="0" cb="0"/><line nr="62" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="16" mb="3" cb="5"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="1" cb="1"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="1" cb="1"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="20" ci="0" mb="6" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="1" cb="1"/><line nr="91" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="10" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="1" cb="1"/><line nr="95" mi="8" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="1" cb="1"/><line nr="97" mi="0" ci="11" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="12" ci="4" mb="7" cb="1"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="1" cb="1"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="2" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="16" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="2" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="2" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="16" ci="0" mb="6" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="10" ci="0" mb="4" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="2" cb="0"/><line nr="137" mi="9" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="2" cb="0"/><line nr="139" mi="10" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="2" cb="0"/><line nr="141" mi="8" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="2" cb="0"/><line nr="143" mi="11" ci="0" mb="0" cb="0"/><line nr="145" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="16" mb="3" cb="5"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="1" cb="1"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="1" cb="1"/><line nr="164" mi="0" ci="9" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="2" cb="0"/><line nr="166" mi="10" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="2" cb="0"/><line nr="168" mi="10" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="2" cb="0"/><line nr="170" mi="13" ci="0" mb="0" cb="0"/><line nr="172" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="16" ci="0" mb="8" cb="0"/><line nr="184" mi="8" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="2" cb="0"/><line nr="187" mi="8" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="2" cb="0"/><line nr="189" mi="8" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="2" cb="0"/><line nr="191" mi="8" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="2" cb="0"/><line nr="193" mi="10" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="2" cb="0"/><line nr="195" mi="11" ci="0" mb="0" cb="0"/><line nr="197" mi="6" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="12" ci="4" mb="7" cb="1"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="2" cb="0"/><line nr="211" mi="6" ci="0" mb="2" cb="0"/><line nr="212" mi="10" ci="0" mb="0" cb="0"/><line nr="214" mi="6" ci="0" mb="0" cb="0"/><line nr="216" mi="4" ci="0" mb="2" cb="0"/><line nr="217" mi="9" ci="0" mb="0" cb="0"/><line nr="218" mi="4" ci="0" mb="2" cb="0"/><line nr="219" mi="9" ci="0" mb="0" cb="0"/><line nr="220" mi="4" ci="0" mb="2" cb="0"/><line nr="221" mi="8" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="2" cb="0"/><line nr="223" mi="8" ci="0" mb="0" cb="0"/><line nr="225" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="1" ci="0" mb="0" cb="0"/><line nr="235" mi="8" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="605" covered="237"/><counter type="BRANCH" missed="112" covered="30"/><counter type="LINE" missed="92" covered="44"/><counter type="COMPLEXITY" missed="69" covered="16"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="BigDecimalOperators.java"><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="16" mb="4" cb="4"/><line nr="36" mi="11" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="1" cb="1"/><line nr="38" mi="11" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="1" cb="1"/><line nr="40" mi="11" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="1" cb="1"/><line nr="42" mi="11" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="1" cb="1"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="2" cb="0"/><line nr="46" mi="12" ci="0" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="16" ci="0" mb="8" cb="0"/><line nr="60" mi="11" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="11" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="2" cb="0"/><line nr="64" mi="11" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="2" cb="0"/><line nr="66" mi="11" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="2" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="2" cb="0"/><line nr="70" mi="12" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="12" ci="4" mb="7" cb="1"/><line nr="84" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="2" cb="0"/><line nr="86" mi="11" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="2" cb="0"/><line nr="88" mi="11" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="2" cb="0"/><line nr="90" mi="11" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="2" cb="0"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="2" cb="0"/><line nr="94" mi="11" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="12" ci="4" mb="7" cb="1"/><line nr="108" mi="0" ci="11" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="2" cb="0"/><line nr="110" mi="11" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="2" cb="0"/><line nr="112" mi="11" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="2" cb="0"/><line nr="114" mi="11" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="2" cb="0"/><line nr="116" mi="8" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="2" cb="0"/><line nr="118" mi="11" ci="0" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="16" ci="0" mb="8" cb="0"/><line nr="132" mi="8" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="2" cb="0"/><line nr="134" mi="7" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="2" cb="0"/><line nr="136" mi="10" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="2" cb="0"/><line nr="138" mi="6" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="2" cb="0"/><line nr="140" mi="7" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="2" cb="0"/><line nr="142" mi="10" ci="0" mb="0" cb="0"/><line nr="144" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="16" ci="0" mb="8" cb="0"/><line nr="156" mi="8" ci="0" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="484" covered="97"/><counter type="BRANCH" missed="88" covered="10"/><counter type="LINE" missed="63" covered="19"/><counter type="COMPLEXITY" missed="53" covered="9"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="1" covered="6"/></sourcefile><sourcefile name="Operators.java"><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="23" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="2"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="16" mb="0" cb="2"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="16" mb="0" cb="2"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="16" mb="0" cb="2"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="1" cb="1"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="1" cb="1"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="155"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="6" covered="21"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LongOperators.java"><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="8" ci="12" mb="6" cb="4"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="2" ci="20" mb="1" cb="5"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="2" cb="0"/><line nr="34" mi="9" ci="0" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="2" cb="0"/><line nr="36" mi="9" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="2" cb="0"/><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="2" cb="0"/><line nr="40" mi="10" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="16" ci="4" mb="9" cb="1"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="3" ci="19" mb="3" cb="3"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="2" cb="0"/><line nr="62" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="2" cb="0"/><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="2" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="2" cb="0"/><line nr="68" mi="10" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="16" ci="4" mb="9" cb="1"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="20" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="1" cb="1"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="18" ci="0" mb="6" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="13" ci="0" mb="4" cb="0"/><line nr="98" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="2" cb="0"/><line nr="102" mi="9" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="2" cb="0"/><line nr="104" mi="10" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="2" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="2" cb="0"/><line nr="108" mi="10" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="16" ci="4" mb="9" cb="1"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="4" ci="0" mb="2" cb="0"/><line nr="124" mi="9" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="2" cb="0"/><line nr="126" mi="10" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="2" cb="0"/><line nr="128" mi="9" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="2" cb="0"/><line nr="130" mi="12" ci="0" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="20" ci="0" mb="10" cb="0"/><line nr="144" mi="7" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="2" cb="0"/><line nr="146" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="2" cb="0"/><line nr="150" mi="9" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="2" cb="0"/><line nr="152" mi="10" ci="0" mb="0" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="16" ci="0" mb="8" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="2" cb="0"/><line nr="168" mi="6" ci="0" mb="2" cb="0"/><line nr="169" mi="10" ci="0" mb="0" cb="0"/><line nr="171" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="2" cb="0"/><line nr="174" mi="9" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="2" cb="0"/><line nr="176" mi="9" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="2" cb="0"/><line nr="178" mi="7" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="2" cb="0"/><line nr="180" mi="7" ci="0" mb="0" cb="0"/><line nr="182" mi="6" ci="0" mb="0" cb="0"/><line nr="190" mi="6" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="7" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="579" covered="163"/><counter type="BRANCH" missed="120" covered="16"/><counter type="LINE" missed="80" covered="28"/><counter type="COMPLEXITY" missed="69" covered="13"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="1" covered="6"/></sourcefile><sourcefile name="DoubleOperators.java"><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="16" mb="3" cb="5"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="1" cb="1"/><line nr="37" mi="8" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="1" cb="1"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="2" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="7" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="2" cb="0"/><line nr="45" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="12" ci="4" mb="7" cb="1"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="2" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="2" cb="0"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="2" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="2" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="2" cb="0"/><line nr="69" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="12" ci="4" mb="7" cb="1"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="2" cb="0"/><line nr="85" mi="8" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="2" cb="0"/><line nr="87" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="2" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="2" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="2" cb="0"/><line nr="93" mi="8" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="12" ci="4" mb="7" cb="1"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="2" cb="0"/><line nr="109" mi="8" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="2" cb="0"/><line nr="111" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="2" cb="0"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="2" cb="0"/><line nr="115" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="2" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="16" ci="0" mb="8" cb="0"/><line nr="131" mi="8" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="2" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="2" cb="0"/><line nr="135" mi="8" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="2" cb="0"/><line nr="137" mi="9" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="2" cb="0"/><line nr="139" mi="10" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="2" cb="0"/><line nr="141" mi="8" ci="0" mb="0" cb="0"/><line nr="143" mi="6" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="380" covered="105"/><counter type="BRANCH" missed="80" covered="10"/><counter type="LINE" missed="58" covered="21"/><counter type="COMPLEXITY" missed="47" covered="11"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="1" covered="6"/></sourcefile><sourcefile name="Operator.java"><line nr="28" mi="0" ci="78" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="86"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="2542" covered="907"/><counter type="BRANCH" missed="503" covered="85"/><counter type="LINE" missed="371" covered="148"/><counter type="COMPLEXITY" missed="302" covered="69"/><counter type="METHOD" missed="21" covered="56"/><counter type="CLASS" missed="4" covered="35"/></package><package name="org/spf4j/zel/vm/gen"><class name="org/spf4j/zel/vm/gen/ZCompiler$JJCalls"><method name="&lt;init&gt;" desc="()V" line="1962"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/gen/ZCompiler$LookaheadSuccess"><method name="&lt;init&gt;" desc="()V" line="1809"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/gen/ZCompiler"><method name="compile" desc="(Ljava/lang/String;Lorg/spf4j/zel/vm/ParsingContext;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mainprogram" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="program" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="statement" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="41"><counter type="INSTRUCTION" missed="14" covered="98"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forStmt" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="99"><counter type="INSTRUCTION" missed="21" covered="113"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="5" covered="28"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ifStmt" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="159"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="programBlock" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="184"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zreturn" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="190"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assignement" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="218"><counter type="INSTRUCTION" missed="27" covered="37"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="241"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assignableExpression" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="249"><counter type="INSTRUCTION" missed="28" covered="101"/><counter type="BRANCH" missed="2" covered="7"/><counter type="LINE" missed="6" covered="23"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expression" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="299"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ternary" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="305"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logical" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="327"><counter type="INSTRUCTION" missed="79" covered="15"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="20" covered="5"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="374"><counter type="INSTRUCTION" missed="26" covered="110"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="4" covered="33"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sum" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="443"><counter type="INSTRUCTION" missed="14" covered="55"/><counter type="BRANCH" missed="1" covered="6"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="term" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="477"><counter type="INSTRUCTION" missed="28" covered="59"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="6" covered="16"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exponent" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="515"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unaryPost" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="531"><counter type="INSTRUCTION" missed="28" covered="113"/><counter type="BRANCH" missed="2" covered="11"/><counter type="LINE" missed="6" covered="28"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unary" desc="(Lorg/spf4j/zel/vm/ParsingContext;Z)V" line="594"><counter type="INSTRUCTION" missed="42" covered="48"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="10" covered="11"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="element" desc="(Lorg/spf4j/zel/vm/ParsingContext;Z)V" line="645"><counter type="INSTRUCTION" missed="14" covered="63"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="params" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="686"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constant" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="731"><counter type="INSTRUCTION" missed="181" covered="135"/><counter type="BRANCH" missed="11" covered="10"/><counter type="LINE" missed="29" covered="19"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseInteger" desc="(Ljava/lang/String;)Ljava/lang/Number;" line="808"><counter type="INSTRUCTION" missed="18" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sysFunction" desc="(Lorg/spf4j/zel/vm/ParsingContext;)V" line="830"><counter type="INSTRUCTION" missed="21" covered="190"/><counter type="BRANCH" missed="1" covered="16"/><counter type="LINE" missed="5" covered="53"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_1" desc="(I)Z" line="922"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_2" desc="(I)Z" line="929"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_3" desc="(I)Z" line="936"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_4" desc="(I)Z" line="943"><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_2_5" desc="(I)Z" line="950"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_25" desc="()Z" line="957"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_52" desc="()Z" line="963"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_51" desc="()Z" line="969"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_23" desc="()Z" line="975"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_50" desc="()Z" line="984"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_3" desc="()Z" line="989"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_21" desc="()Z" line="995"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_49" desc="()Z" line="1004"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_16" desc="()Z" line="1009"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_45" desc="()Z" line="1020"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_43" desc="()Z" line="1038"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_14" desc="()Z" line="1043"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_46" desc="()Z" line="1050"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_42" desc="()Z" line="1056"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_40" desc="()Z" line="1067"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_4" desc="()Z" line="1076"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_19" desc="()Z" line="1081"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_18" desc="()Z" line="1086"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_47" desc="()Z" line="1091"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_48" desc="()Z" line="1097"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_44" desc="()Z" line="1105"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_90" desc="()Z" line="1114"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_17" desc="()Z" line="1119"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_13" desc="()Z" line="1125"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_39" desc="()Z" line="1139"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_41" desc="()Z" line="1146"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_5" desc="()Z" line="1155"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_87" desc="()Z" line="1163"><counter type="INSTRUCTION" missed="3" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_38" desc="()Z" line="1171"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_63" desc="()Z" line="1181"><counter type="INSTRUCTION" missed="6" covered="13"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_36" desc="()Z" line="1188"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_93" desc="()Z" line="1198"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_89" desc="()Z" line="1204"><counter type="INSTRUCTION" missed="21" covered="6"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_37" desc="()Z" line="1215"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_34" desc="()Z" line="1228"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_35" desc="()Z" line="1239"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_73" desc="()Z" line="1249"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_61" desc="()Z" line="1254"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_74" desc="()Z" line="1259"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_95" desc="()Z" line="1265"><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_32" desc="()Z" line="1271"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_60" desc="()Z" line="1282"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_62" desc="()Z" line="1291"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_72" desc="()Z" line="1303"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_92" desc="()Z" line="1308"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_59" desc="()Z" line="1319"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_94" desc="()Z" line="1324"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_55" desc="()Z" line="1330"><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_91" desc="()Z" line="1345"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_88" desc="()Z" line="1356"><counter type="INSTRUCTION" missed="10" covered="26"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_2" desc="()Z" line="1368"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3_1" desc="()Z" line="1373"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_86" desc="()Z" line="1378"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_85" desc="()Z" line="1385"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_3R_84" desc="()Z" line="1391"><counter type="INSTRUCTION" missed="4" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_83" desc="()Z" line="1397"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_82" desc="()Z" line="1402"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_81" desc="()Z" line="1407"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_80" desc="()Z" line="1412"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_79" desc="()Z" line="1417"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_76" desc="()Z" line="1423"><counter type="INSTRUCTION" missed="14" covered="44"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_78" desc="()Z" line="1453"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_33" desc="()Z" line="1459"><counter type="INSTRUCTION" missed="2" covered="49"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_77" desc="()Z" line="1481"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_29" desc="()Z" line="1487"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_75" desc="()Z" line="1497"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_58" desc="()Z" line="1507"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_57" desc="()Z" line="1512"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_71" desc="()Z" line="1517"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_70" desc="()Z" line="1522"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_69" desc="()Z" line="1527"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_31" desc="()Z" line="1532"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_68" desc="()Z" line="1538"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_67" desc="()Z" line="1543"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_30" desc="()Z" line="1549"><counter type="INSTRUCTION" missed="7" covered="23"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_66" desc="()Z" line="1562"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_65" desc="()Z" line="1567"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_27" desc="()Z" line="1572"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_28" desc="()Z" line="1582"><counter type="INSTRUCTION" missed="18" covered="6"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_64" desc="()Z" line="1590"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_54" desc="()Z" line="1596"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_56" desc="()Z" line="1609"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_24" desc="()Z" line="1636"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_20" desc="()Z" line="1644"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_15" desc="()Z" line="1654"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_22" desc="()Z" line="1663"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_26" desc="()Z" line="1668"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_3R_53" desc="()Z" line="1675"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_la1_init_0" desc="()V" line="1701"><counter type="INSTRUCTION" missed="0" covered="156"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_la1_init_1" desc="()V" line="1704"><counter type="INSTRUCTION" missed="0" covered="156"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_la1_init_2" desc="()V" line="1707"><counter type="INSTRUCTION" missed="0" covered="156"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="1715"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="1691"><counter type="INSTRUCTION" missed="6" covered="97"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReInit" desc="(Ljava/io/InputStream;)V" line="1730"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="1734"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="1691"><counter type="INSTRUCTION" missed="95" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/Reader;)V" line="1756"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/gen/ZCompilerTokenManager;)V" line="1691"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lorg/spf4j/zel/vm/gen/ZCompilerTokenManager;)V" line="1777"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_consume_token" desc="(I)Lorg/spf4j/zel/vm/gen/Token;" line="1786"><counter type="INSTRUCTION" missed="13" covered="79"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jj_scan_token" desc="(I)Z" line="1812"><counter type="INSTRUCTION" missed="22" covered="65"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Lorg/spf4j/zel/vm/gen/Token;" line="1835"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getToken" desc="(I)Lorg/spf4j/zel/vm/gen/Token;" line="1843"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_add_error_token" desc="(II)V" line="1858"><counter type="INSTRUCTION" missed="103" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateParseException" desc="()Lorg/spf4j/zel/vm/gen/ParseException;" line="1884"><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enable_tracing" desc="()V" line="1924"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="disable_tracing" desc="()V" line="1928"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_rescan_token" desc="()V" line="1931"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jj_save" desc="(II)V" line="1954"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1696"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1588" covered="3601"/><counter type="BRANCH" missed="244" covered="435"/><counter type="LINE" missed="274" covered="780"/><counter type="COMPLEXITY" missed="202" covered="301"/><counter type="METHOD" missed="16" covered="124"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/gen/JavaCharStream"><method name="hexval" desc="(C)I" line="17"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="17" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTabSize" desc="(I)V" line="86"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTabSize" desc="(I)I" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ExpandBuff" desc="(Z)V" line="91"><counter type="INSTRUCTION" missed="185" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="FillBuff" desc="()V" line="139"><counter type="INSTRUCTION" missed="6" covered="63"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ReadByte" desc="()C" line="170"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BeginToken" desc="()C" line="179"><counter type="INSTRUCTION" missed="3" covered="38"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AdjustBuffSize" desc="()V" line="198"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="UpdateLineColumn" desc="(C)V" line="218"><counter type="INSTRUCTION" missed="43" covered="46"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readChar" desc="()C" line="259"><counter type="INSTRUCTION" missed="125" covered="90"/><counter type="BRANCH" missed="15" covered="9"/><counter type="LINE" missed="24" covered="16"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumn" desc="()I" line="356"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLine" desc="()I" line="365"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEndColumn" desc="()I" line="370"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndLine" desc="()I" line="375"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBeginColumn" desc="()I" line="380"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBeginLine" desc="()I" line="385"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backup" desc="(I)V" line="391"><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;III)V" line="64"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;II)V" line="415"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="421"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/Reader;III)V" line="427"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/Reader;II)V" line="448"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/Reader;)V" line="454"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;III)V" line="460"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;III)V" line="467"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;II)V" line="474"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;II)V" line="481"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="487"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="493"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;Ljava/lang/String;III)V" line="500"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;III)V" line="507"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;Ljava/lang/String;II)V" line="513"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;II)V" line="519"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="524"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Ljava/io/InputStream;)V" line="530"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="GetImage" desc="()Ljava/lang/String;" line="536"><counter type="INSTRUCTION" missed="29" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="GetSuffix" desc="(I)[C" line="546"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Done" desc="()V" line="563"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="adjustBeginLineColumn" desc="(II)V" line="574"><counter type="INSTRUCTION" missed="159" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="919" covered="398"/><counter type="BRANCH" missed="72" covered="27"/><counter type="LINE" missed="171" covered="83"/><counter type="COMPLEXITY" missed="75" covered="22"/><counter type="METHOD" missed="25" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/gen/Token"><method name="getValue" desc="()Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="85"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newToken" desc="(ILjava/lang/String;)Lorg/spf4j/zel/vm/gen/Token;" line="119"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newToken" desc="(I)Lorg/spf4j/zel/vm/gen/Token;" line="127"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="20"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/spf4j/zel/vm/gen/ParseException"><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/gen/Token;[[I[Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialise" desc="(Lorg/spf4j/zel/vm/gen/Token;[[I[Ljava/lang/String;)Ljava/lang/String;" line="91"><counter type="INSTRUCTION" missed="229" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add_escapes" desc="(Ljava/lang/String;)Ljava/lang/String;" line="142"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="371" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="66" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/vm/gen/ZCompilerConstants"><method name="&lt;clinit&gt;" desc="()V" line="148"><counter type="INSTRUCTION" missed="284" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="284" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/vm/gen/TokenMgrError"><method name="addEscapes" desc="(Ljava/lang/String;)Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="LexicalError" desc="(ZIIILjava/lang/String;C)Ljava/lang/String;" line="108"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="133"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="138"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ZIIILjava/lang/String;CI)V" line="144"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/spf4j/zel/vm/gen/ZCompilerTokenManager"><method name="setDebugStream" desc="(Ljava/io/PrintStream;)V" line="15"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjStopStringLiteralDfa_0" desc="(IJ)I" line="18"><counter type="INSTRUCTION" missed="108" covered="80"/><counter type="BRANCH" missed="27" covered="14"/><counter type="LINE" missed="33" covered="21"/><counter type="COMPLEXITY" missed="18" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjStartNfa_0" desc="(IJ)I" line="98"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjStopAtPos" desc="(II)I" line="102"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa0_0" desc="()I" line="108"><counter type="INSTRUCTION" missed="18" covered="168"/><counter type="BRANCH" missed="4" covered="31"/><counter type="LINE" missed="4" covered="40"/><counter type="COMPLEXITY" missed="4" covered="31"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa1_0" desc="(J)I" line="192"><counter type="INSTRUCTION" missed="39" covered="147"/><counter type="BRANCH" missed="12" covered="27"/><counter type="LINE" missed="7" covered="30"/><counter type="COMPLEXITY" missed="9" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa2_0" desc="(JJ)I" line="260"><counter type="INSTRUCTION" missed="30" covered="81"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="7" covered="16"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa3_0" desc="(JJ)I" line="300"><counter type="INSTRUCTION" missed="24" covered="72"/><counter type="BRANCH" missed="4" covered="11"/><counter type="LINE" missed="6" covered="14"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa4_0" desc="(JJ)I" line="334"><counter type="INSTRUCTION" missed="30" covered="63"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="7" covered="12"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa5_0" desc="(JJ)I" line="368"><counter type="INSTRUCTION" missed="23" covered="29"/><counter type="BRANCH" missed="4" covered="3"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveStringLiteralDfa6_0" desc="(JJ)I" line="390"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjStartNfaWithStates_0" desc="(III)I" line="410"><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjMoveNfa_0" desc="(II)I" line="442"><counter type="INSTRUCTION" missed="1041" covered="915"/><counter type="BRANCH" missed="332" covered="185"/><counter type="LINE" missed="228" covered="179"/><counter type="COMPLEXITY" missed="233" covered="91"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCanMove_0" desc="(IIIJJ)Z" line="1144"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjCanMove_1" desc="(IIIJJ)Z" line="1156"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/gen/JavaCharStream;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/spf4j/zel/vm/gen/JavaCharStream;I)V" line="1209"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lorg/spf4j/zel/vm/gen/JavaCharStream;)V" line="1216"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInitRounds" desc="()V" line="1224"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ReInit" desc="(Lorg/spf4j/zel/vm/gen/JavaCharStream;I)V" line="1232"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="SwitchTo" desc="(I)V" line="1239"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="jjFillToken" desc="()Lorg/spf4j/zel/vm/gen/Token;" line="1253"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNextToken" desc="()Lorg/spf4j/zel/vm/gen/Token;" line="1280"><counter type="INSTRUCTION" missed="74" covered="92"/><counter type="BRANCH" missed="12" covered="8"/><counter type="LINE" missed="17" covered="20"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCheckNAdd" desc="(I)V" line="1343"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjAddStates" desc="(II)V" line="1352"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCheckNAddTwoStates" desc="(II)V" line="1357"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jjCheckNAddStates" desc="(II)V" line="1364"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="416"><counter type="INSTRUCTION" missed="0" covered="748"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1612" covered="2565"/><counter type="BRANCH" missed="444" covered="308"/><counter type="LINE" missed="360" covered="393"/><counter type="COMPLEXITY" missed="319" covered="187"/><counter type="METHOD" missed="9" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Token.java"><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="20"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TokenMgrError.java"><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="2" cb="0"/><line nr="54" mi="4" ci="0" mb="10" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="10" ci="0" mb="4" cb="0"/><line nr="84" mi="11" ci="0" mb="0" cb="0"/><line nr="85" mi="18" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="45" ci="0" mb="2" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="10" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="173" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ParseException.java"><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="95" mi="6" ci="0" mb="2" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="10" ci="0" mb="2" cb="0"/><line nr="99" mi="12" ci="0" mb="0" cb="0"/><line nr="101" mi="11" ci="0" mb="2" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="7" ci="0" mb="2" cb="0"/><line nr="109" mi="11" ci="0" mb="2" cb="0"/><line nr="110" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="11" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="14" ci="0" mb="0" cb="0"/><line nr="115" mi="9" ci="0" mb="0" cb="0"/><line nr="116" mi="11" ci="0" mb="0" cb="0"/><line nr="117" mi="9" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="19" ci="0" mb="0" cb="0"/><line nr="121" mi="11" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="2" cb="0"/><line nr="123" mi="14" ci="0" mb="0" cb="0"/><line nr="125" mi="13" ci="0" mb="0" cb="0"/><line nr="127" mi="10" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="15" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="2" cb="0"/><line nr="145" mi="4" ci="0" mb="10" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="10" ci="0" mb="4" cb="0"/><line nr="175" mi="11" ci="0" mb="0" cb="0"/><line nr="176" mi="18" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="371" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="66" covered="0"/><counter type="COMPLEXITY" missed="25" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ZCompilerConstants.java"><line nr="148" mi="284" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="284" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ZCompiler.java"><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="2"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="2"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="2"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="1" cb="7"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="16" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="1" cb="1"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="2"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="1" cb="1"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="1" cb="1"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="17" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="14" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="2"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="20" mb="0" cb="2"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="2"/><line nr="178" mi="0" ci="14" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="2"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="214" mi="0" ci="8" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="2" cb="2"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="8" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="8" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="231" mi="8" ci="0" mb="0" cb="0"/><line nr="232" mi="1" ci="0" mb="0" cb="0"/><line nr="234" mi="6" ci="0" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="8" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="11" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="2"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="2"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="9" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="1" cb="1"/><line nr="271" mi="0" ci="4" mb="1" cb="2"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="15" mb="0" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="6" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="0" ci="8" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="6" ci="0" mb="0" cb="0"/><line nr="291" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="2"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="14" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="14" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="6" mb="0" cb="0"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="1" cb="1"/><line nr="335" mi="1" ci="0" mb="0" cb="0"/><line nr="337" mi="0" ci="6" mb="0" cb="0"/><line nr="338" mi="0" ci="1" mb="0" cb="0"/><line nr="340" mi="4" ci="0" mb="4" cb="0"/><line nr="342" mi="4" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="1" ci="0" mb="0" cb="0"/><line nr="348" mi="4" ci="0" mb="0" cb="0"/><line nr="349" mi="1" ci="0" mb="0" cb="0"/><line nr="351" mi="6" ci="0" mb="0" cb="0"/><line nr="352" mi="4" ci="0" mb="0" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="355" mi="3" ci="0" mb="0" cb="0"/><line nr="356" mi="3" ci="0" mb="4" cb="0"/><line nr="358" mi="8" ci="0" mb="0" cb="0"/><line nr="359" mi="1" ci="0" mb="0" cb="0"/><line nr="361" mi="8" ci="0" mb="0" cb="0"/><line nr="362" mi="1" ci="0" mb="0" cb="0"/><line nr="364" mi="8" ci="0" mb="0" cb="0"/><line nr="365" mi="1" ci="0" mb="0" cb="0"/><line nr="367" mi="12" ci="0" mb="0" cb="0"/><line nr="370" mi="0" ci="1" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="4" mb="0" cb="2"/><line nr="385" mi="0" ci="1" mb="0" cb="0"/><line nr="387" mi="0" ci="6" mb="0" cb="0"/><line nr="388" mi="0" ci="1" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="1" cb="6"/><line nr="392" mi="0" ci="4" mb="0" cb="0"/><line nr="393" mi="0" ci="1" mb="0" cb="0"/><line nr="395" mi="0" ci="4" mb="0" cb="0"/><line nr="396" mi="0" ci="1" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="404" mi="0" ci="4" mb="0" cb="0"/><line nr="405" mi="0" ci="1" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="0"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="410" mi="6" ci="0" mb="0" cb="0"/><line nr="411" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="4" ci="0" mb="0" cb="0"/><line nr="414" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="1" cb="6"/><line nr="417" mi="0" ci="8" mb="0" cb="0"/><line nr="418" mi="0" ci="1" mb="0" cb="0"/><line nr="420" mi="0" ci="8" mb="0" cb="0"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="423" mi="0" ci="8" mb="0" cb="0"/><line nr="424" mi="0" ci="1" mb="0" cb="0"/><line nr="426" mi="0" ci="8" mb="0" cb="0"/><line nr="427" mi="0" ci="1" mb="0" cb="0"/><line nr="429" mi="0" ci="8" mb="0" cb="0"/><line nr="430" mi="0" ci="1" mb="0" cb="0"/><line nr="432" mi="0" ci="8" mb="0" cb="0"/><line nr="433" mi="0" ci="1" mb="0" cb="0"/><line nr="435" mi="12" ci="0" mb="0" cb="0"/><line nr="439" mi="0" ci="1" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="446" mi="0" ci="4" mb="0" cb="2"/><line nr="450" mi="0" ci="1" mb="0" cb="0"/><line nr="452" mi="0" ci="6" mb="0" cb="0"/><line nr="453" mi="0" ci="1" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="1" cb="2"/><line nr="457" mi="0" ci="4" mb="0" cb="0"/><line nr="458" mi="0" ci="1" mb="0" cb="0"/><line nr="460" mi="0" ci="4" mb="0" cb="0"/><line nr="461" mi="0" ci="1" mb="0" cb="0"/><line nr="463" mi="6" ci="0" mb="0" cb="0"/><line nr="464" mi="4" ci="0" mb="0" cb="0"/><line nr="465" mi="4" ci="0" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="0" cb="0"/><line nr="468" mi="0" ci="4" mb="0" cb="2"/><line nr="469" mi="0" ci="9" mb="0" cb="0"/><line nr="471" mi="0" ci="9" mb="0" cb="0"/><line nr="473" mi="0" ci="1" mb="0" cb="0"/><line nr="477" mi="0" ci="3" mb="0" cb="0"/><line nr="480" mi="0" ci="4" mb="0" cb="2"/><line nr="485" mi="0" ci="1" mb="0" cb="0"/><line nr="487" mi="0" ci="6" mb="0" cb="0"/><line nr="488" mi="0" ci="1" mb="0" cb="0"/><line nr="490" mi="0" ci="4" mb="2" cb="2"/><line nr="492" mi="0" ci="4" mb="0" cb="0"/><line nr="493" mi="0" ci="1" mb="0" cb="0"/><line nr="495" mi="0" ci="4" mb="0" cb="0"/><line nr="496" mi="0" ci="1" mb="0" cb="0"/><line nr="498" mi="4" ci="0" mb="0" cb="0"/><line nr="499" mi="1" ci="0" mb="0" cb="0"/><line nr="501" mi="6" ci="0" mb="0" cb="0"/><line nr="502" mi="4" ci="0" mb="0" cb="0"/><line nr="503" mi="4" ci="0" mb="0" cb="0"/><line nr="505" mi="0" ci="3" mb="0" cb="0"/><line nr="506" mi="0" ci="4" mb="0" cb="2"/><line nr="507" mi="0" ci="9" mb="0" cb="0"/><line nr="508" mi="0" ci="4" mb="1" cb="1"/><line nr="509" mi="0" ci="9" mb="0" cb="0"/><line nr="510" mi="9" ci="0" mb="0" cb="0"/><line nr="512" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="0" ci="3" mb="0" cb="0"/><line nr="518" mi="0" ci="4" mb="0" cb="2"/><line nr="523" mi="0" ci="4" mb="0" cb="0"/><line nr="524" mi="0" ci="3" mb="0" cb="0"/><line nr="525" mi="0" ci="9" mb="0" cb="0"/><line nr="527" mi="0" ci="1" mb="0" cb="0"/><line nr="531" mi="0" ci="2" mb="0" cb="0"/><line nr="532" mi="0" ci="4" mb="0" cb="0"/><line nr="535" mi="0" ci="4" mb="0" cb="2"/><line nr="540" mi="0" ci="1" mb="0" cb="0"/><line nr="542" mi="0" ci="6" mb="0" cb="0"/><line nr="543" mi="0" ci="1" mb="0" cb="0"/><line nr="545" mi="0" ci="4" mb="0" cb="2"/><line nr="546" mi="0" ci="3" mb="0" cb="0"/><line nr="547" mi="0" ci="4" mb="0" cb="2"/><line nr="549" mi="0" ci="4" mb="0" cb="0"/><line nr="550" mi="0" ci="2" mb="0" cb="0"/><line nr="551" mi="0" ci="1" mb="0" cb="0"/><line nr="553" mi="0" ci="6" mb="0" cb="0"/><line nr="556" mi="0" ci="2" mb="0" cb="2"/><line nr="557" mi="0" ci="9" mb="0" cb="0"/><line nr="559" mi="0" ci="9" mb="0" cb="0"/><line nr="562" mi="0" ci="4" mb="1" cb="1"/><line nr="565" mi="0" ci="4" mb="1" cb="2"/><line nr="567" mi="0" ci="4" mb="0" cb="0"/><line nr="568" mi="0" ci="4" mb="0" cb="0"/><line nr="569" mi="0" ci="13" mb="0" cb="0"/><line nr="570" mi="0" ci="1" mb="0" cb="0"/><line nr="572" mi="0" ci="4" mb="0" cb="0"/><line nr="573" mi="0" ci="3" mb="0" cb="0"/><line nr="574" mi="0" ci="4" mb="0" cb="0"/><line nr="575" mi="0" ci="8" mb="0" cb="0"/><line nr="576" mi="0" ci="1" mb="0" cb="0"/><line nr="578" mi="6" ci="0" mb="0" cb="0"/><line nr="579" mi="4" ci="0" mb="0" cb="0"/><line nr="580" mi="4" ci="0" mb="0" cb="0"/><line nr="584" mi="6" ci="0" mb="0" cb="0"/><line nr="585" mi="4" ci="0" mb="0" cb="0"/><line nr="586" mi="4" ci="0" mb="0" cb="0"/><line nr="590" mi="0" ci="1" mb="0" cb="0"/><line nr="594" mi="0" ci="4" mb="1" cb="2"/><line nr="597" mi="0" ci="4" mb="2" cb="1"/><line nr="599" mi="0" ci="4" mb="0" cb="0"/><line nr="600" mi="0" ci="1" mb="0" cb="0"/><line nr="602" mi="4" ci="0" mb="0" cb="0"/><line nr="603" mi="1" ci="0" mb="0" cb="0"/><line nr="605" mi="6" ci="0" mb="0" cb="0"/><line nr="606" mi="4" ci="0" mb="0" cb="0"/><line nr="607" mi="4" ci="0" mb="0" cb="0"/><line nr="609" mi="0" ci="4" mb="0" cb="0"/><line nr="610" mi="0" ci="4" mb="1" cb="1"/><line nr="612" mi="0" ci="12" mb="0" cb="0"/><line nr="613" mi="0" ci="9" mb="0" cb="0"/><line nr="617" mi="8" ci="0" mb="0" cb="0"/><line nr="619" mi="1" ci="0" mb="0" cb="0"/><line nr="634" mi="0" ci="4" mb="0" cb="0"/><line nr="635" mi="0" ci="1" mb="0" cb="0"/><line nr="637" mi="6" ci="0" mb="0" cb="0"/><line nr="638" mi="4" ci="0" mb="0" cb="0"/><line nr="639" mi="4" ci="0" mb="0" cb="0"/><line nr="641" mi="0" ci="1" mb="0" cb="0"/><line nr="645" mi="0" ci="4" mb="1" cb="5"/><line nr="656" mi="0" ci="3" mb="0" cb="0"/><line nr="657" mi="0" ci="1" mb="0" cb="0"/><line nr="659" mi="0" ci="4" mb="0" cb="0"/><line nr="660" mi="0" ci="4" mb="0" cb="0"/><line nr="661" mi="0" ci="2" mb="1" cb="1"/><line nr="662" mi="0" ci="12" mb="0" cb="0"/><line nr="666" mi="0" ci="3" mb="0" cb="0"/><line nr="667" mi="0" ci="1" mb="0" cb="0"/><line nr="669" mi="0" ci="4" mb="0" cb="0"/><line nr="670" mi="0" ci="3" mb="0" cb="0"/><line nr="671" mi="0" ci="8" mb="0" cb="0"/><line nr="672" mi="0" ci="1" mb="0" cb="0"/><line nr="674" mi="0" ci="4" mb="0" cb="0"/><line nr="675" mi="0" ci="3" mb="0" cb="0"/><line nr="676" mi="0" ci="4" mb="0" cb="0"/><line nr="677" mi="0" ci="1" mb="0" cb="0"/><line nr="679" mi="6" ci="0" mb="0" cb="0"/><line nr="680" mi="4" ci="0" mb="0" cb="0"/><line nr="681" mi="4" ci="0" mb="0" cb="0"/><line nr="683" mi="0" ci="1" mb="0" cb="0"/><line nr="686" mi="0" ci="2" mb="0" cb="0"/><line nr="687" mi="0" ci="4" mb="0" cb="0"/><line nr="688" mi="0" ci="4" mb="0" cb="2"/><line nr="705" mi="0" ci="3" mb="0" cb="0"/><line nr="706" mi="0" ci="1" mb="0" cb="0"/><line nr="709" mi="0" ci="4" mb="0" cb="2"/><line nr="712" mi="0" ci="1" mb="0" cb="0"/><line nr="714" mi="0" ci="6" mb="0" cb="0"/><line nr="715" mi="0" ci="1" mb="0" cb="0"/><line nr="717" mi="0" ci="4" mb="0" cb="0"/><line nr="718" mi="0" ci="3" mb="0" cb="0"/><line nr="719" mi="0" ci="2" mb="0" cb="0"/><line nr="723" mi="0" ci="6" mb="0" cb="0"/><line nr="726" mi="0" ci="12" mb="0" cb="0"/><line nr="727" mi="0" ci="4" mb="0" cb="0"/><line nr="728" mi="0" ci="1" mb="0" cb="0"/><line nr="731" mi="0" ci="4" mb="2" cb="2"/><line nr="740" mi="0" ci="4" mb="6" cb="3"/><line nr="742" mi="0" ci="4" mb="0" cb="0"/><line nr="744" mi="0" ci="12" mb="2" cb="2"/><line nr="745" mi="16" ci="0" mb="0" cb="0"/><line nr="746" mi="0" ci="12" mb="1" cb="3"/><line nr="747" mi="0" ci="16" mb="0" cb="0"/><line nr="749" mi="0" ci="16" mb="0" cb="0"/><line nr="751" mi="1" ci="0" mb="0" cb="0"/><line nr="752" mi="6" ci="0" mb="0" cb="0"/><line nr="753" mi="0" ci="1" mb="0" cb="0"/><line nr="756" mi="0" ci="4" mb="0" cb="0"/><line nr="757" mi="0" ci="15" mb="0" cb="0"/><line nr="758" mi="0" ci="1" mb="0" cb="0"/><line nr="760" mi="4" ci="0" mb="0" cb="0"/><line nr="761" mi="12" ci="0" mb="0" cb="0"/><line nr="762" mi="1" ci="0" mb="0" cb="0"/><line nr="764" mi="4" ci="0" mb="0" cb="0"/><line nr="765" mi="12" ci="0" mb="0" cb="0"/><line nr="766" mi="1" ci="0" mb="0" cb="0"/><line nr="768" mi="4" ci="0" mb="0" cb="0"/><line nr="769" mi="21" ci="0" mb="0" cb="0"/><line nr="770" mi="1" ci="0" mb="0" cb="0"/><line nr="772" mi="4" ci="0" mb="0" cb="0"/><line nr="773" mi="11" ci="0" mb="0" cb="0"/><line nr="774" mi="1" ci="0" mb="0" cb="0"/><line nr="776" mi="0" ci="4" mb="0" cb="0"/><line nr="777" mi="0" ci="22" mb="0" cb="0"/><line nr="778" mi="0" ci="1" mb="0" cb="0"/><line nr="780" mi="4" ci="0" mb="0" cb="0"/><line nr="781" mi="12" ci="0" mb="0" cb="0"/><line nr="782" mi="6" ci="0" mb="0" cb="0"/><line nr="783" mi="14" ci="0" mb="0" cb="0"/><line nr="784" mi="1" ci="0" mb="0" cb="0"/><line nr="786" mi="6" ci="0" mb="0" cb="0"/><line nr="787" mi="4" ci="0" mb="0" cb="0"/><line nr="788" mi="4" ci="0" mb="0" cb="0"/><line nr="790" mi="0" ci="1" mb="0" cb="0"/><line nr="792" mi="0" ci="4" mb="0" cb="0"/><line nr="793" mi="0" ci="12" mb="0" cb="0"/><line nr="794" mi="0" ci="1" mb="0" cb="0"/><line nr="796" mi="4" ci="0" mb="0" cb="0"/><line nr="797" mi="12" ci="0" mb="0" cb="0"/><line nr="798" mi="1" ci="0" mb="0" cb="0"/><line nr="800" mi="6" ci="0" mb="0" cb="0"/><line nr="801" mi="4" ci="0" mb="0" cb="0"/><line nr="802" mi="4" ci="0" mb="0" cb="0"/><line nr="804" mi="0" ci="1" mb="0" cb="0"/><line nr="808" mi="0" ci="8" mb="1" cb="3"/><line nr="809" mi="0" ci="8" mb="0" cb="0"/><line nr="811" mi="0" ci="3" mb="0" cb="0"/><line nr="812" mi="1" ci="0" mb="0" cb="0"/><line nr="813" mi="5" ci="0" mb="0" cb="0"/><line nr="814" mi="1" ci="1" mb="0" cb="0"/><line nr="817" mi="0" ci="3" mb="0" cb="0"/><line nr="818" mi="1" ci="0" mb="0" cb="0"/><line nr="820" mi="3" ci="0" mb="0" cb="0"/><line nr="821" mi="1" ci="0" mb="0" cb="0"/><line nr="822" mi="5" ci="0" mb="0" cb="0"/><line nr="823" mi="1" ci="0" mb="0" cb="0"/><line nr="824" mi="0" ci="1" mb="0" cb="0"/><line nr="826" mi="0" ci="2" mb="0" cb="0"/><line nr="830" mi="0" ci="2" mb="0" cb="0"/><line nr="831" mi="0" ci="4" mb="0" cb="0"/><line nr="832" mi="0" ci="2" mb="0" cb="0"/><line nr="833" mi="0" ci="2" mb="0" cb="0"/><line nr="834" mi="0" ci="2" mb="0" cb="0"/><line nr="835" mi="0" ci="4" mb="0" cb="0"/><line nr="836" mi="0" ci="4" mb="0" cb="2"/><line nr="838" mi="0" ci="4" mb="0" cb="0"/><line nr="839" mi="0" ci="2" mb="0" cb="0"/><line nr="840" mi="0" ci="1" mb="0" cb="0"/><line nr="842" mi="0" ci="6" mb="0" cb="0"/><line nr="845" mi="0" ci="4" mb="0" cb="2"/><line nr="848" mi="0" ci="4" mb="1" cb="2"/><line nr="850" mi="0" ci="4" mb="0" cb="0"/><line nr="851" mi="0" ci="2" mb="0" cb="0"/><line nr="852" mi="0" ci="1" mb="0" cb="0"/><line nr="854" mi="0" ci="4" mb="0" cb="0"/><line nr="855" mi="0" ci="2" mb="0" cb="0"/><line nr="856" mi="0" ci="1" mb="0" cb="0"/><line nr="858" mi="6" ci="0" mb="0" cb="0"/><line nr="859" mi="4" ci="0" mb="0" cb="0"/><line nr="860" mi="4" ci="0" mb="0" cb="0"/><line nr="864" mi="0" ci="6" mb="0" cb="0"/><line nr="867" mi="0" ci="4" mb="0" cb="2"/><line nr="869" mi="0" ci="4" mb="0" cb="0"/><line nr="870" mi="0" ci="4" mb="0" cb="0"/><line nr="871" mi="0" ci="1" mb="0" cb="0"/><line nr="873" mi="0" ci="6" mb="0" cb="0"/><line nr="876" mi="0" ci="4" mb="0" cb="2"/><line nr="878" mi="0" ci="4" mb="0" cb="0"/><line nr="879" mi="0" ci="4" mb="0" cb="0"/><line nr="880" mi="0" ci="6" mb="0" cb="0"/><line nr="883" mi="0" ci="4" mb="0" cb="2"/><line nr="886" mi="0" ci="1" mb="0" cb="0"/><line nr="888" mi="0" ci="6" mb="0" cb="0"/><line nr="889" mi="0" ci="1" mb="0" cb="0"/><line nr="891" mi="0" ci="4" mb="0" cb="0"/><line nr="892" mi="0" ci="4" mb="0" cb="0"/><line nr="893" mi="0" ci="7" mb="0" cb="0"/><line nr="895" mi="0" ci="4" mb="0" cb="0"/><line nr="896" mi="0" ci="1" mb="0" cb="0"/><line nr="898" mi="0" ci="6" mb="0" cb="0"/><line nr="901" mi="0" ci="3" mb="0" cb="0"/><line nr="902" mi="0" ci="3" mb="0" cb="0"/><line nr="903" mi="0" ci="8" mb="0" cb="0"/><line nr="904" mi="0" ci="3" mb="0" cb="0"/><line nr="905" mi="0" ci="4" mb="0" cb="0"/><line nr="906" mi="0" ci="4" mb="0" cb="0"/><line nr="908" mi="0" ci="2" mb="0" cb="2"/><line nr="909" mi="0" ci="4" mb="0" cb="0"/><line nr="911" mi="0" ci="4" mb="0" cb="0"/><line nr="912" mi="0" ci="2" mb="0" cb="2"/><line nr="913" mi="0" ci="4" mb="0" cb="0"/><line nr="915" mi="0" ci="11" mb="0" cb="0"/><line nr="916" mi="1" ci="0" mb="0" cb="0"/><line nr="917" mi="6" ci="0" mb="0" cb="0"/><line nr="918" mi="0" ci="1" mb="0" cb="0"/><line nr="919" mi="0" ci="1" mb="0" cb="0"/><line nr="922" mi="0" ci="10" mb="0" cb="0"/><line nr="923" mi="0" ci="7" mb="0" cb="2"/><line nr="924" mi="3" ci="0" mb="0" cb="0"/><line nr="925" mi="13" ci="6" mb="0" cb="0"/><line nr="929" mi="0" ci="10" mb="0" cb="0"/><line nr="930" mi="0" ci="7" mb="0" cb="2"/><line nr="931" mi="3" ci="0" mb="0" cb="0"/><line nr="932" mi="13" ci="6" mb="0" cb="0"/><line nr="936" mi="0" ci="10" mb="0" cb="0"/><line nr="937" mi="2" ci="5" mb="1" cb="1"/><line nr="938" mi="0" ci="3" mb="0" cb="0"/><line nr="939" mi="7" ci="12" mb="0" cb="0"/><line nr="943" mi="0" ci="10" mb="0" cb="0"/><line nr="944" mi="0" ci="7" mb="0" cb="2"/><line nr="945" mi="3" ci="0" mb="0" cb="0"/><line nr="946" mi="13" ci="6" mb="0" cb="0"/><line nr="950" mi="0" ci="10" mb="0" cb="0"/><line nr="951" mi="2" ci="5" mb="1" cb="1"/><line nr="952" mi="0" ci="3" mb="0" cb="0"/><line nr="953" mi="7" ci="12" mb="0" cb="0"/><line nr="957" mi="0" ci="6" mb="0" cb="2"/><line nr="958" mi="2" ci="4" mb="1" cb="1"/><line nr="959" mi="0" ci="2" mb="0" cb="0"/><line nr="963" mi="0" ci="6" mb="0" cb="2"/><line nr="964" mi="2" ci="3" mb="1" cb="1"/><line nr="965" mi="0" ci="2" mb="0" cb="0"/><line nr="969" mi="0" ci="5" mb="0" cb="2"/><line nr="970" mi="0" ci="2" mb="0" cb="0"/><line nr="975" mi="0" ci="3" mb="0" cb="0"/><line nr="976" mi="0" ci="3" mb="0" cb="2"/><line nr="977" mi="0" ci="3" mb="0" cb="0"/><line nr="978" mi="0" ci="5" mb="0" cb="2"/><line nr="980" mi="0" ci="2" mb="0" cb="0"/><line nr="984" mi="0" ci="6" mb="0" cb="2"/><line nr="985" mi="0" ci="2" mb="0" cb="0"/><line nr="989" mi="0" ci="5" mb="0" cb="2"/><line nr="990" mi="0" ci="2" mb="0" cb="0"/><line nr="995" mi="0" ci="3" mb="0" cb="0"/><line nr="996" mi="0" ci="3" mb="0" cb="2"/><line nr="997" mi="0" ci="3" mb="0" cb="0"/><line nr="998" mi="0" ci="5" mb="0" cb="2"/><line nr="1000" mi="0" ci="2" mb="0" cb="0"/><line nr="1004" mi="0" ci="5" mb="0" cb="2"/><line nr="1005" mi="0" ci="2" mb="0" cb="0"/><line nr="1009" mi="0" ci="6" mb="0" cb="2"/><line nr="1012" mi="0" ci="3" mb="0" cb="0"/><line nr="1013" mi="0" ci="7" mb="0" cb="2"/><line nr="1015" mi="0" ci="2" mb="0" cb="0"/><line nr="1020" mi="0" ci="3" mb="0" cb="0"/><line nr="1021" mi="0" ci="3" mb="0" cb="2"/><line nr="1022" mi="0" ci="3" mb="0" cb="0"/><line nr="1023" mi="0" ci="3" mb="0" cb="2"/><line nr="1024" mi="0" ci="3" mb="0" cb="0"/><line nr="1025" mi="0" ci="3" mb="0" cb="2"/><line nr="1026" mi="0" ci="3" mb="0" cb="0"/><line nr="1027" mi="0" ci="3" mb="0" cb="2"/><line nr="1028" mi="0" ci="3" mb="0" cb="0"/><line nr="1029" mi="0" ci="5" mb="0" cb="2"/><line nr="1034" mi="0" ci="2" mb="0" cb="0"/><line nr="1038" mi="0" ci="5" mb="0" cb="2"/><line nr="1039" mi="0" ci="2" mb="0" cb="0"/><line nr="1043" mi="0" ci="5" mb="0" cb="2"/><line nr="1044" mi="0" ci="6" mb="0" cb="2"/><line nr="1045" mi="2" ci="3" mb="1" cb="1"/><line nr="1046" mi="0" ci="2" mb="0" cb="0"/><line nr="1050" mi="0" ci="6" mb="0" cb="2"/><line nr="1051" mi="0" ci="2" mb="0" cb="0"/><line nr="1056" mi="0" ci="3" mb="0" cb="0"/><line nr="1057" mi="0" ci="4" mb="0" cb="2"/><line nr="1058" mi="0" ci="3" mb="0" cb="0"/><line nr="1059" mi="0" ci="6" mb="1" cb="1"/><line nr="1061" mi="2" ci="3" mb="1" cb="1"/><line nr="1062" mi="0" ci="2" mb="0" cb="0"/><line nr="1067" mi="0" ci="3" mb="0" cb="0"/><line nr="1068" mi="0" ci="3" mb="0" cb="2"/><line nr="1069" mi="0" ci="3" mb="0" cb="0"/><line nr="1070" mi="0" ci="5" mb="0" cb="2"/><line nr="1072" mi="0" ci="2" mb="0" cb="0"/><line nr="1076" mi="0" ci="6" mb="0" cb="2"/><line nr="1077" mi="0" ci="2" mb="0" cb="0"/><line nr="1081" mi="0" ci="6" mb="1" cb="1"/><line nr="1082" mi="2" ci="0" mb="0" cb="0"/><line nr="1086" mi="0" ci="6" mb="0" cb="2"/><line nr="1087" mi="0" ci="2" mb="0" cb="0"/><line nr="1091" mi="0" ci="6" mb="0" cb="2"/><line nr="1092" mi="2" ci="4" mb="1" cb="1"/><line nr="1093" mi="0" ci="2" mb="0" cb="0"/><line nr="1097" mi="0" ci="6" mb="0" cb="2"/><line nr="1098" mi="2" ci="3" mb="1" cb="1"/><line nr="1099" mi="2" ci="4" mb="1" cb="1"/><line nr="1100" mi="0" ci="2" mb="0" cb="0"/><line nr="1105" mi="0" ci="3" mb="0" cb="0"/><line nr="1106" mi="0" ci="3" mb="0" cb="2"/><line nr="1107" mi="0" ci="3" mb="0" cb="0"/><line nr="1108" mi="0" ci="5" mb="0" cb="2"/><line nr="1110" mi="0" ci="2" mb="0" cb="0"/><line nr="1114" mi="2" ci="3" mb="1" cb="1"/><line nr="1115" mi="0" ci="2" mb="0" cb="0"/><line nr="1119" mi="0" ci="6" mb="0" cb="2"/><line nr="1120" mi="2" ci="3" mb="1" cb="1"/><line nr="1121" mi="0" ci="2" mb="0" cb="0"/><line nr="1125" mi="0" ci="5" mb="0" cb="2"/><line nr="1127" mi="0" ci="3" mb="0" cb="0"/><line nr="1128" mi="0" ci="3" mb="0" cb="2"/><line nr="1129" mi="0" ci="3" mb="0" cb="0"/><line nr="1130" mi="0" ci="3" mb="0" cb="2"/><line nr="1131" mi="0" ci="3" mb="0" cb="0"/><line nr="1132" mi="0" ci="5" mb="1" cb="1"/><line nr="1135" mi="0" ci="2" mb="0" cb="0"/><line nr="1139" mi="0" ci="6" mb="0" cb="2"/><line nr="1140" mi="2" ci="3" mb="1" cb="1"/><line nr="1141" mi="0" ci="2" mb="0" cb="0"/><line nr="1146" mi="0" ci="3" mb="0" cb="0"/><line nr="1147" mi="0" ci="3" mb="0" cb="2"/><line nr="1148" mi="0" ci="3" mb="0" cb="0"/><line nr="1149" mi="0" ci="5" mb="0" cb="2"/><line nr="1151" mi="0" ci="2" mb="0" cb="0"/><line nr="1155" mi="0" ci="5" mb="0" cb="2"/><line nr="1157" mi="0" ci="3" mb="0" cb="0"/><line nr="1158" mi="0" ci="6" mb="0" cb="2"/><line nr="1159" mi="0" ci="2" mb="0" cb="0"/><line nr="1163" mi="0" ci="6" mb="0" cb="2"/><line nr="1165" mi="0" ci="3" mb="0" cb="0"/><line nr="1166" mi="3" ci="3" mb="1" cb="1"/><line nr="1167" mi="0" ci="2" mb="0" cb="0"/><line nr="1171" mi="0" ci="5" mb="0" cb="2"/><line nr="1174" mi="0" ci="3" mb="0" cb="0"/><line nr="1175" mi="0" ci="7" mb="0" cb="2"/><line nr="1177" mi="0" ci="2" mb="0" cb="0"/><line nr="1181" mi="2" ci="4" mb="1" cb="1"/><line nr="1182" mi="2" ci="3" mb="1" cb="1"/><line nr="1183" mi="2" ci="4" mb="1" cb="1"/><line nr="1184" mi="0" ci="2" mb="0" cb="0"/><line nr="1188" mi="0" ci="5" mb="0" cb="2"/><line nr="1191" mi="0" ci="3" mb="0" cb="0"/><line nr="1192" mi="0" ci="7" mb="0" cb="2"/><line nr="1194" mi="0" ci="2" mb="0" cb="0"/><line nr="1198" mi="6" ci="0" mb="2" cb="0"/><line nr="1199" mi="5" ci="0" mb="2" cb="0"/><line nr="1200" mi="2" ci="0" mb="0" cb="0"/><line nr="1204" mi="0" ci="6" mb="1" cb="1"/><line nr="1205" mi="5" ci="0" mb="2" cb="0"/><line nr="1206" mi="5" ci="0" mb="2" cb="0"/><line nr="1208" mi="3" ci="0" mb="0" cb="0"/><line nr="1209" mi="6" ci="0" mb="2" cb="0"/><line nr="1210" mi="2" ci="0" mb="0" cb="0"/><line nr="1215" mi="0" ci="3" mb="0" cb="0"/><line nr="1216" mi="0" ci="4" mb="0" cb="2"/><line nr="1217" mi="0" ci="3" mb="0" cb="0"/><line nr="1218" mi="0" ci="4" mb="0" cb="2"/><line nr="1219" mi="0" ci="3" mb="0" cb="0"/><line nr="1220" mi="0" ci="6" mb="1" cb="1"/><line nr="1223" mi="2" ci="3" mb="1" cb="1"/><line nr="1224" mi="0" ci="2" mb="0" cb="0"/><line nr="1228" mi="0" ci="5" mb="0" cb="2"/><line nr="1231" mi="0" ci="3" mb="0" cb="0"/><line nr="1232" mi="0" ci="7" mb="0" cb="2"/><line nr="1234" mi="0" ci="2" mb="0" cb="0"/><line nr="1239" mi="0" ci="3" mb="0" cb="0"/><line nr="1240" mi="0" ci="4" mb="0" cb="2"/><line nr="1241" mi="0" ci="3" mb="0" cb="0"/><line nr="1242" mi="0" ci="6" mb="0" cb="2"/><line nr="1244" mi="2" ci="3" mb="1" cb="1"/><line nr="1245" mi="0" ci="2" mb="0" cb="0"/><line nr="1249" mi="0" ci="6" mb="0" cb="2"/><line nr="1250" mi="0" ci="2" mb="0" cb="0"/><line nr="1254" mi="0" ci="6" mb="1" cb="1"/><line nr="1255" mi="2" ci="0" mb="0" cb="0"/><line nr="1259" mi="0" ci="6" mb="0" cb="2"/><line nr="1260" mi="2" ci="4" mb="1" cb="1"/><line nr="1261" mi="0" ci="2" mb="0" cb="0"/><line nr="1265" mi="0" ci="6" mb="1" cb="1"/><line nr="1266" mi="5" ci="0" mb="2" cb="0"/><line nr="1267" mi="2" ci="0" mb="0" cb="0"/><line nr="1271" mi="0" ci="5" mb="0" cb="2"/><line nr="1274" mi="0" ci="3" mb="0" cb="0"/><line nr="1275" mi="0" ci="7" mb="0" cb="2"/><line nr="1277" mi="0" ci="2" mb="0" cb="0"/><line nr="1282" mi="0" ci="3" mb="0" cb="0"/><line nr="1283" mi="0" ci="3" mb="0" cb="2"/><line nr="1284" mi="0" ci="3" mb="0" cb="0"/><line nr="1285" mi="0" ci="5" mb="0" cb="2"/><line nr="1287" mi="0" ci="2" mb="0" cb="0"/><line nr="1291" mi="0" ci="6" mb="0" cb="2"/><line nr="1292" mi="2" ci="4" mb="1" cb="1"/><line nr="1295" mi="0" ci="3" mb="0" cb="0"/><line nr="1296" mi="0" ci="7" mb="0" cb="2"/><line nr="1298" mi="2" ci="4" mb="1" cb="1"/><line nr="1299" mi="0" ci="2" mb="0" cb="0"/><line nr="1303" mi="0" ci="6" mb="0" cb="2"/><line nr="1304" mi="0" ci="2" mb="0" cb="0"/><line nr="1308" mi="2" ci="4" mb="1" cb="1"/><line nr="1309" mi="2" ci="3" mb="1" cb="1"/><line nr="1312" mi="0" ci="3" mb="0" cb="0"/><line nr="1313" mi="0" ci="7" mb="1" cb="1"/><line nr="1315" mi="0" ci="2" mb="0" cb="0"/><line nr="1319" mi="0" ci="6" mb="1" cb="1"/><line nr="1320" mi="2" ci="0" mb="0" cb="0"/><line nr="1324" mi="0" ci="6" mb="0" cb="2"/><line nr="1325" mi="2" ci="3" mb="1" cb="1"/><line nr="1326" mi="0" ci="2" mb="0" cb="0"/><line nr="1330" mi="0" ci="6" mb="0" cb="2"/><line nr="1332" mi="0" ci="3" mb="0" cb="0"/><line nr="1333" mi="0" ci="6" mb="1" cb="1"/><line nr="1334" mi="0" ci="3" mb="0" cb="0"/><line nr="1335" mi="0" ci="6" mb="0" cb="2"/><line nr="1336" mi="0" ci="3" mb="0" cb="0"/><line nr="1337" mi="0" ci="6" mb="1" cb="1"/><line nr="1338" mi="0" ci="3" mb="0" cb="0"/><line nr="1339" mi="0" ci="6" mb="0" cb="2"/><line nr="1340" mi="2" ci="3" mb="1" cb="1"/><line nr="1341" mi="0" ci="2" mb="0" cb="0"/><line nr="1345" mi="2" ci="3" mb="1" cb="1"/><line nr="1348" mi="0" ci="3" mb="0" cb="0"/><line nr="1349" mi="0" ci="7" mb="0" cb="2"/><line nr="1351" mi="2" ci="4" mb="1" cb="1"/><line nr="1352" mi="0" ci="2" mb="0" cb="0"/><line nr="1356" mi="0" ci="6" mb="0" cb="2"/><line nr="1358" mi="0" ci="3" mb="0" cb="0"/><line nr="1359" mi="3" ci="3" mb="1" cb="1"/><line nr="1360" mi="2" ci="3" mb="1" cb="1"/><line nr="1361" mi="0" ci="3" mb="0" cb="0"/><line nr="1362" mi="3" ci="3" mb="1" cb="1"/><line nr="1363" mi="2" ci="3" mb="1" cb="1"/><line nr="1364" mi="0" ci="2" mb="0" cb="0"/><line nr="1368" mi="0" ci="5" mb="0" cb="2"/><line nr="1369" mi="0" ci="2" mb="0" cb="0"/><line nr="1373" mi="0" ci="5" mb="0" cb="2"/><line nr="1374" mi="0" ci="2" mb="0" cb="0"/><line nr="1378" mi="6" ci="0" mb="2" cb="0"/><line nr="1379" mi="6" ci="0" mb="2" cb="0"/><line nr="1380" mi="6" ci="0" mb="2" cb="0"/><line nr="1381" mi="2" ci="0" mb="0" cb="0"/><line nr="1385" mi="6" ci="0" mb="2" cb="0"/><line nr="1386" mi="5" ci="0" mb="2" cb="0"/><line nr="1387" mi="2" ci="0" mb="0" cb="0"/><line nr="1391" mi="2" ci="4" mb="1" cb="1"/><line nr="1392" mi="2" ci="3" mb="1" cb="1"/><line nr="1393" mi="0" ci="2" mb="0" cb="0"/><line nr="1397" mi="0" ci="5" mb="1" cb="1"/><line nr="1398" mi="2" ci="0" mb="0" cb="0"/><line nr="1402" mi="0" ci="5" mb="0" cb="2"/><line nr="1403" mi="0" ci="2" mb="0" cb="0"/><line nr="1407" mi="0" ci="5" mb="0" cb="2"/><line nr="1408" mi="0" ci="2" mb="0" cb="0"/><line nr="1412" mi="0" ci="5" mb="0" cb="2"/><line nr="1413" mi="0" ci="2" mb="0" cb="0"/><line nr="1417" mi="0" ci="5" mb="1" cb="1"/><line nr="1418" mi="2" ci="0" mb="0" cb="0"/><line nr="1423" mi="0" ci="3" mb="0" cb="0"/><line nr="1424" mi="0" ci="3" mb="0" cb="2"/><line nr="1425" mi="0" ci="3" mb="0" cb="0"/><line nr="1426" mi="0" ci="3" mb="1" cb="1"/><line nr="1427" mi="0" ci="3" mb="0" cb="0"/><line nr="1428" mi="0" ci="3" mb="0" cb="2"/><line nr="1429" mi="0" ci="3" mb="0" cb="0"/><line nr="1430" mi="0" ci="3" mb="0" cb="2"/><line nr="1431" mi="0" ci="3" mb="0" cb="0"/><line nr="1432" mi="0" ci="3" mb="0" cb="2"/><line nr="1433" mi="0" ci="3" mb="0" cb="0"/><line nr="1434" mi="0" ci="3" mb="1" cb="1"/><line nr="1435" mi="0" ci="3" mb="0" cb="0"/><line nr="1436" mi="0" ci="3" mb="1" cb="1"/><line nr="1437" mi="3" ci="0" mb="0" cb="0"/><line nr="1438" mi="3" ci="0" mb="2" cb="0"/><line nr="1439" mi="3" ci="0" mb="0" cb="0"/><line nr="1440" mi="5" ci="0" mb="2" cb="0"/><line nr="1449" mi="0" ci="2" mb="0" cb="0"/><line nr="1453" mi="0" ci="5" mb="0" cb="2"/><line nr="1454" mi="0" ci="2" mb="0" cb="0"/><line nr="1459" mi="0" ci="3" mb="0" cb="0"/><line nr="1460" mi="0" ci="4" mb="1" cb="1"/><line nr="1461" mi="0" ci="3" mb="0" cb="0"/><line nr="1462" mi="0" ci="4" mb="0" cb="2"/><line nr="1463" mi="0" ci="3" mb="0" cb="0"/><line nr="1464" mi="0" ci="4" mb="1" cb="1"/><line nr="1465" mi="0" ci="3" mb="0" cb="0"/><line nr="1466" mi="0" ci="4" mb="1" cb="1"/><line nr="1467" mi="0" ci="3" mb="0" cb="0"/><line nr="1468" mi="0" ci="4" mb="1" cb="1"/><line nr="1469" mi="0" ci="3" mb="0" cb="0"/><line nr="1470" mi="0" ci="6" mb="1" cb="1"/><line nr="1476" mi="2" ci="3" mb="1" cb="1"/><line nr="1477" mi="0" ci="2" mb="0" cb="0"/><line nr="1481" mi="0" ci="6" mb="0" cb="2"/><line nr="1482" mi="2" ci="3" mb="1" cb="1"/><line nr="1483" mi="0" ci="2" mb="0" cb="0"/><line nr="1487" mi="0" ci="5" mb="0" cb="2"/><line nr="1490" mi="0" ci="3" mb="0" cb="0"/><line nr="1491" mi="0" ci="7" mb="0" cb="2"/><line nr="1493" mi="0" ci="2" mb="0" cb="0"/><line nr="1497" mi="2" ci="3" mb="1" cb="1"/><line nr="1500" mi="0" ci="3" mb="0" cb="0"/><line nr="1501" mi="0" ci="7" mb="0" cb="2"/><line nr="1503" mi="0" ci="2" mb="0" cb="0"/><line nr="1507" mi="0" ci="6" mb="1" cb="1"/><line nr="1508" mi="2" ci="0" mb="0" cb="0"/><line nr="1512" mi="0" ci="6" mb="0" cb="2"/><line nr="1513" mi="0" ci="2" mb="0" cb="0"/><line nr="1517" mi="0" ci="6" mb="1" cb="1"/><line nr="1518" mi="2" ci="0" mb="0" cb="0"/><line nr="1522" mi="0" ci="6" mb="0" cb="2"/><line nr="1523" mi="0" ci="2" mb="0" cb="0"/><line nr="1527" mi="0" ci="6" mb="1" cb="1"/><line nr="1528" mi="2" ci="0" mb="0" cb="0"/><line nr="1532" mi="0" ci="6" mb="0" cb="2"/><line nr="1533" mi="2" ci="3" mb="1" cb="1"/><line nr="1534" mi="0" ci="2" mb="0" cb="0"/><line nr="1538" mi="0" ci="6" mb="1" cb="1"/><line nr="1539" mi="2" ci="0" mb="0" cb="0"/><line nr="1543" mi="0" ci="6" mb="1" cb="1"/><line nr="1544" mi="2" ci="0" mb="0" cb="0"/><line nr="1549" mi="0" ci="3" mb="0" cb="0"/><line nr="1550" mi="0" ci="4" mb="1" cb="1"/><line nr="1551" mi="0" ci="3" mb="0" cb="0"/><line nr="1552" mi="0" ci="4" mb="1" cb="1"/><line nr="1553" mi="0" ci="3" mb="0" cb="0"/><line nr="1554" mi="0" ci="6" mb="1" cb="1"/><line nr="1557" mi="5" ci="0" mb="2" cb="0"/><line nr="1558" mi="2" ci="0" mb="0" cb="0"/><line nr="1562" mi="0" ci="6" mb="1" cb="1"/><line nr="1563" mi="2" ci="0" mb="0" cb="0"/><line nr="1567" mi="0" ci="6" mb="0" cb="2"/><line nr="1568" mi="0" ci="2" mb="0" cb="0"/><line nr="1572" mi="0" ci="5" mb="0" cb="2"/><line nr="1575" mi="0" ci="3" mb="0" cb="0"/><line nr="1576" mi="0" ci="7" mb="1" cb="1"/><line nr="1578" mi="0" ci="2" mb="0" cb="0"/><line nr="1582" mi="0" ci="6" mb="1" cb="1"/><line nr="1583" mi="5" ci="0" mb="2" cb="0"/><line nr="1584" mi="6" ci="0" mb="2" cb="0"/><line nr="1585" mi="5" ci="0" mb="2" cb="0"/><line nr="1586" mi="2" ci="0" mb="0" cb="0"/><line nr="1590" mi="0" ci="6" mb="0" cb="2"/><line nr="1591" mi="0" ci="2" mb="0" cb="0"/><line nr="1596" mi="0" ci="3" mb="0" cb="0"/><line nr="1597" mi="0" ci="3" mb="0" cb="2"/><line nr="1598" mi="0" ci="3" mb="0" cb="0"/><line nr="1599" mi="0" ci="3" mb="0" cb="2"/><line nr="1600" mi="0" ci="3" mb="0" cb="0"/><line nr="1601" mi="0" ci="5" mb="1" cb="1"/><line nr="1604" mi="0" ci="2" mb="0" cb="0"/><line nr="1609" mi="0" ci="3" mb="0" cb="0"/><line nr="1610" mi="0" ci="3" mb="0" cb="2"/><line nr="1611" mi="0" ci="3" mb="0" cb="0"/><line nr="1612" mi="0" ci="3" mb="0" cb="2"/><line nr="1613" mi="0" ci="3" mb="0" cb="0"/><line nr="1614" mi="0" ci="3" mb="1" cb="1"/><line nr="1615" mi="0" ci="3" mb="0" cb="0"/><line nr="1616" mi="0" ci="3" mb="1" cb="1"/><line nr="1617" mi="0" ci="3" mb="0" cb="0"/><line nr="1618" mi="0" ci="3" mb="1" cb="1"/><line nr="1619" mi="0" ci="3" mb="0" cb="0"/><line nr="1620" mi="0" ci="3" mb="1" cb="1"/><line nr="1621" mi="0" ci="3" mb="0" cb="0"/><line nr="1622" mi="0" ci="3" mb="0" cb="2"/><line nr="1623" mi="0" ci="3" mb="0" cb="0"/><line nr="1624" mi="0" ci="5" mb="1" cb="1"/><line nr="1632" mi="0" ci="2" mb="0" cb="0"/><line nr="1636" mi="0" ci="5" mb="0" cb="2"/><line nr="1638" mi="0" ci="3" mb="0" cb="0"/><line nr="1639" mi="0" ci="6" mb="1" cb="1"/><line nr="1640" mi="0" ci="2" mb="0" cb="0"/><line nr="1644" mi="0" ci="5" mb="0" cb="2"/><line nr="1647" mi="0" ci="3" mb="0" cb="0"/><line nr="1648" mi="0" ci="7" mb="0" cb="2"/><line nr="1650" mi="0" ci="2" mb="0" cb="0"/><line nr="1654" mi="0" ci="6" mb="0" cb="2"/><line nr="1656" mi="0" ci="3" mb="0" cb="0"/><line nr="1657" mi="0" ci="6" mb="0" cb="2"/><line nr="1658" mi="2" ci="4" mb="1" cb="1"/><line nr="1659" mi="0" ci="2" mb="0" cb="0"/><line nr="1663" mi="0" ci="5" mb="0" cb="2"/><line nr="1664" mi="0" ci="2" mb="0" cb="0"/><line nr="1668" mi="0" ci="6" mb="0" cb="2"/><line nr="1669" mi="2" ci="3" mb="1" cb="1"/><line nr="1670" mi="2" ci="4" mb="1" cb="1"/><line nr="1671" mi="0" ci="2" mb="0" cb="0"/><line nr="1675" mi="0" ci="6" mb="0" cb="2"/><line nr="1676" mi="2" ci="3" mb="1" cb="1"/><line nr="1677" mi="2" ci="4" mb="1" cb="1"/><line nr="1678" mi="0" ci="2" mb="0" cb="0"/><line nr="1691" mi="8" ci="4" mb="0" cb="0"/><line nr="1696" mi="0" ci="1" mb="0" cb="0"/><line nr="1697" mi="0" ci="1" mb="0" cb="0"/><line nr="1698" mi="0" ci="1" mb="0" cb="0"/><line nr="1699" mi="0" ci="1" mb="0" cb="0"/><line nr="1701" mi="0" ci="155" mb="0" cb="0"/><line nr="1702" mi="0" ci="1" mb="0" cb="0"/><line nr="1704" mi="0" ci="155" mb="0" cb="0"/><line nr="1705" mi="0" ci="1" mb="0" cb="0"/><line nr="1707" mi="0" ci="155" mb="0" cb="0"/><line nr="1708" mi="0" ci="1" mb="0" cb="0"/><line nr="1709" mi="8" ci="4" mb="0" cb="0"/><line nr="1710" mi="6" ci="3" mb="0" cb="0"/><line nr="1711" mi="6" ci="3" mb="0" cb="0"/><line nr="1715" mi="0" ci="4" mb="0" cb="0"/><line nr="1716" mi="0" ci="1" mb="0" cb="0"/><line nr="1718" mi="0" ci="2" mb="0" cb="0"/><line nr="1719" mi="6" ci="10" mb="0" cb="0"/><line nr="1720" mi="0" ci="7" mb="0" cb="0"/><line nr="1721" mi="0" ci="5" mb="0" cb="0"/><line nr="1722" mi="0" ci="9" mb="0" cb="0"/><line nr="1723" mi="0" ci="3" mb="0" cb="0"/><line nr="1724" mi="0" ci="12" mb="0" cb="2"/><line nr="1725" mi="0" ci="16" mb="0" cb="2"/><line nr="1726" mi="0" ci="1" mb="0" cb="0"/><line nr="1730" mi="4" ci="0" mb="0" cb="0"/><line nr="1731" mi="1" ci="0" mb="0" cb="0"/><line nr="1734" mi="14" ci="0" mb="0" cb="0"/><line nr="1735" mi="5" ci="0" mb="0" cb="0"/><line nr="1736" mi="5" ci="0" mb="0" cb="0"/><line nr="1737" mi="9" ci="0" mb="0" cb="0"/><line nr="1738" mi="3" ci="0" mb="0" cb="0"/><line nr="1739" mi="12" ci="0" mb="2" cb="0"/><line nr="1740" mi="16" ci="0" mb="2" cb="0"/><line nr="1741" mi="1" ci="0" mb="0" cb="0"/><line nr="1744" mi="2" ci="0" mb="0" cb="0"/><line nr="1745" mi="8" ci="0" mb="0" cb="0"/><line nr="1746" mi="7" ci="0" mb="0" cb="0"/><line nr="1747" mi="5" ci="0" mb="0" cb="0"/><line nr="1748" mi="9" ci="0" mb="0" cb="0"/><line nr="1749" mi="3" ci="0" mb="0" cb="0"/><line nr="1750" mi="12" ci="0" mb="2" cb="0"/><line nr="1751" mi="16" ci="0" mb="2" cb="0"/><line nr="1752" mi="1" ci="0" mb="0" cb="0"/><line nr="1756" mi="6" ci="0" mb="0" cb="0"/><line nr="1757" mi="5" ci="0" mb="0" cb="0"/><line nr="1758" mi="5" ci="0" mb="0" cb="0"/><line nr="1759" mi="9" ci="0" mb="0" cb="0"/><line nr="1760" mi="3" ci="0" mb="0" cb="0"/><line nr="1761" mi="12" ci="0" mb="2" cb="0"/><line nr="1762" mi="16" ci="0" mb="2" cb="0"/><line nr="1763" mi="1" ci="0" mb="0" cb="0"/><line nr="1766" mi="2" ci="0" mb="0" cb="0"/><line nr="1767" mi="3" ci="0" mb="0" cb="0"/><line nr="1768" mi="5" ci="0" mb="0" cb="0"/><line nr="1769" mi="9" ci="0" mb="0" cb="0"/><line nr="1770" mi="3" ci="0" mb="0" cb="0"/><line nr="1771" mi="12" ci="0" mb="2" cb="0"/><line nr="1772" mi="16" ci="0" mb="2" cb="0"/><line nr="1773" mi="1" ci="0" mb="0" cb="0"/><line nr="1777" mi="3" ci="0" mb="0" cb="0"/><line nr="1778" mi="5" ci="0" mb="0" cb="0"/><line nr="1779" mi="9" ci="0" mb="0" cb="0"/><line nr="1780" mi="3" ci="0" mb="0" cb="0"/><line nr="1781" mi="12" ci="0" mb="2" cb="0"/><line nr="1782" mi="16" ci="0" mb="2" cb="0"/><line nr="1783" mi="1" ci="0" mb="0" cb="0"/><line nr="1786" mi="0" ci="3" mb="0" cb="0"/><line nr="1787" mi="0" ci="13" mb="0" cb="2"/><line nr="1788" mi="0" ci="9" mb="0" cb="0"/><line nr="1789" mi="0" ci="5" mb="1" cb="1"/><line nr="1790" mi="0" ci="6" mb="0" cb="0"/><line nr="1791" mi="0" ci="9" mb="0" cb="2"/><line nr="1792" mi="0" ci="3" mb="0" cb="0"/><line nr="1793" mi="0" ci="9" mb="0" cb="2"/><line nr="1794" mi="0" ci="5" mb="0" cb="0"/><line nr="1795" mi="0" ci="2" mb="0" cb="2"/><line nr="1796" mi="0" ci="8" mb="0" cb="2"/><line nr="1797" mi="0" ci="4" mb="0" cb="0"/><line nr="1801" mi="0" ci="3" mb="0" cb="0"/><line nr="1803" mi="4" ci="0" mb="0" cb="0"/><line nr="1804" mi="3" ci="0" mb="0" cb="0"/><line nr="1805" mi="3" ci="0" mb="0" cb="0"/><line nr="1806" mi="3" ci="0" mb="0" cb="0"/><line nr="1809" mi="0" ci="3" mb="0" cb="0"/><line nr="1810" mi="12" ci="6" mb="0" cb="0"/><line nr="1812" mi="0" ci="5" mb="0" cb="2"/><line nr="1813" mi="0" ci="6" mb="0" cb="0"/><line nr="1814" mi="0" ci="4" mb="0" cb="2"/><line nr="1815" mi="0" ci="13" mb="0" cb="0"/><line nr="1817" mi="0" ci="9" mb="0" cb="0"/><line nr="1820" mi="0" ci="5" mb="0" cb="0"/><line nr="1822" mi="0" ci="3" mb="1" cb="1"/><line nr="1823" mi="5" ci="0" mb="0" cb="0"/><line nr="1824" mi="11" ci="0" mb="4" cb="0"/><line nr="1825" mi="6" ci="0" mb="2" cb="0"/><line nr="1827" mi="0" ci="7" mb="0" cb="2"/><line nr="1828" mi="0" ci="11" mb="1" cb="3"/><line nr="1829" mi="0" ci="2" mb="0" cb="0"/><line nr="1835" mi="13" ci="0" mb="2" cb="0"/><line nr="1836" mi="9" ci="0" mb="0" cb="0"/><line nr="1837" mi="6" ci="0" mb="0" cb="0"/><line nr="1838" mi="3" ci="0" mb="0" cb="0"/><line nr="1843" mi="3" ci="0" mb="0" cb="0"/><line nr="1844" mi="7" ci="0" mb="2" cb="0"/><line nr="1845" mi="7" ci="0" mb="2" cb="0"/><line nr="1846" mi="7" ci="0" mb="0" cb="0"/><line nr="1848" mi="2" ci="0" mb="0" cb="0"/><line nr="1851" mi="10" ci="5" mb="0" cb="0"/><line nr="1853" mi="6" ci="3" mb="0" cb="0"/><line nr="1854" mi="8" ci="4" mb="0" cb="0"/><line nr="1858" mi="4" ci="0" mb="2" cb="0"/><line nr="1859" mi="6" ci="0" mb="2" cb="0"/><line nr="1860" mi="12" ci="0" mb="0" cb="0"/><line nr="1861" mi="3" ci="0" mb="2" cb="0"/><line nr="1862" mi="5" ci="0" mb="0" cb="0"/><line nr="1863" mi="8" ci="0" mb="2" cb="0"/><line nr="1864" mi="8" ci="0" mb="0" cb="0"/><line nr="1866" mi="7" ci="0" mb="2" cb="0"/><line nr="1867" mi="5" ci="0" mb="0" cb="0"/><line nr="1868" mi="6" ci="0" mb="2" cb="0"/><line nr="1869" mi="9" ci="0" mb="2" cb="0"/><line nr="1870" mi="8" ci="0" mb="2" cb="0"/><line nr="1871" mi="1" ci="0" mb="0" cb="0"/><line nr="1874" mi="6" ci="0" mb="0" cb="0"/><line nr="1875" mi="1" ci="0" mb="0" cb="0"/><line nr="1877" mi="1" ci="0" mb="0" cb="0"/><line nr="1878" mi="12" ci="0" mb="2" cb="0"/><line nr="1880" mi="1" ci="0" mb="0" cb="0"/><line nr="1884" mi="3" ci="0" mb="0" cb="0"/><line nr="1885" mi="3" ci="0" mb="0" cb="0"/><line nr="1886" mi="3" ci="0" mb="2" cb="0"/><line nr="1887" mi="5" ci="0" mb="0" cb="0"/><line nr="1888" mi="3" ci="0" mb="0" cb="0"/><line nr="1890" mi="7" ci="0" mb="2" cb="0"/><line nr="1891" mi="7" ci="0" mb="2" cb="0"/><line nr="1892" mi="7" ci="0" mb="2" cb="0"/><line nr="1893" mi="8" ci="0" mb="2" cb="0"/><line nr="1894" mi="4" ci="0" mb="0" cb="0"/><line nr="1896" mi="8" ci="0" mb="2" cb="0"/><line nr="1897" mi="6" ci="0" mb="0" cb="0"/><line nr="1899" mi="8" ci="0" mb="2" cb="0"/><line nr="1900" mi="6" ci="0" mb="0" cb="0"/><line nr="1905" mi="7" ci="0" mb="2" cb="0"/><line nr="1906" mi="4" ci="0" mb="2" cb="0"/><line nr="1907" mi="4" ci="0" mb="0" cb="0"/><line nr="1908" mi="5" ci="0" mb="0" cb="0"/><line nr="1909" mi="6" ci="0" mb="0" cb="0"/><line nr="1912" mi="3" ci="0" mb="0" cb="0"/><line nr="1913" mi="2" ci="0" mb="0" cb="0"/><line nr="1914" mi="4" ci="0" mb="0" cb="0"/><line nr="1915" mi="5" ci="0" mb="0" cb="0"/><line nr="1916" mi="9" ci="0" mb="2" cb="0"/><line nr="1917" mi="8" ci="0" mb="0" cb="0"/><line nr="1919" mi="8" ci="0" mb="0" cb="0"/><line nr="1924" mi="1" ci="0" mb="0" cb="0"/><line nr="1928" mi="1" ci="0" mb="0" cb="0"/><line nr="1931" mi="3" ci="0" mb="0" cb="0"/><line nr="1932" mi="7" ci="0" mb="2" cb="0"/><line nr="1934" mi="5" ci="0" mb="0" cb="0"/><line nr="1936" mi="5" ci="0" mb="2" cb="0"/><line nr="1937" mi="11" ci="0" mb="0" cb="0"/><line nr="1938" mi="2" ci="0" mb="6" cb="0"/><line nr="1939" mi="4" ci="0" mb="0" cb="0"/><line nr="1940" mi="4" ci="0" mb="0" cb="0"/><line nr="1941" mi="4" ci="0" mb="0" cb="0"/><line nr="1942" mi="4" ci="0" mb="0" cb="0"/><line nr="1943" mi="3" ci="0" mb="0" cb="0"/><line nr="1946" mi="3" ci="0" mb="0" cb="0"/><line nr="1947" mi="2" ci="0" mb="2" cb="0"/><line nr="1948" mi="2" ci="0" mb="0" cb="0"/><line nr="1950" mi="3" ci="0" mb="0" cb="0"/><line nr="1951" mi="1" ci="0" mb="0" cb="0"/><line nr="1954" mi="0" ci="5" mb="0" cb="0"/><line nr="1955" mi="0" ci="5" mb="0" cb="2"/><line nr="1956" mi="0" ci="11" mb="0" cb="2"/><line nr="1957" mi="0" ci="4" mb="0" cb="0"/><line nr="1959" mi="0" ci="16" mb="0" cb="0"/><line nr="1960" mi="0" ci="1" mb="0" cb="0"/><line nr="1962" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1588" covered="3607"/><counter type="BRANCH" missed="244" covered="435"/><counter type="LINE" missed="274" covered="782"/><counter type="COMPLEXITY" missed="202" covered="303"/><counter type="METHOD" missed="16" covered="126"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="JavaCharStream.java"><line nr="17" mi="2" ci="0" mb="17" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="2" cb="0"/><line nr="99" mi="12" ci="0" mb="0" cb="0"/><line nr="100" mi="12" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="12" ci="0" mb="0" cb="0"/><line nr="104" mi="12" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="12" ci="0" mb="0" cb="0"/><line nr="108" mi="12" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="11" ci="0" mb="0" cb="0"/><line nr="115" mi="12" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="12" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="12" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="7" ci="0" mb="0" cb="0"/><line nr="127" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="9" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="1" cb="1"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="15" mb="0" cb="2"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="10" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="1" cb="1"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="2" cb="0"/><line nr="200" mi="4" ci="0" mb="2" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="5" ci="0" mb="2" cb="0"/><line nr="209" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="7" ci="0" mb="2" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="2"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="10" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="1" cb="1"/><line nr="227" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="2" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="9" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="2" cb="2"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="240" mi="1" ci="0" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="6" ci="0" mb="0" cb="0"/><line nr="246" mi="13" ci="0" mb="0" cb="0"/><line nr="247" mi="1" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="7" mb="0" cb="0"/><line nr="253" mi="0" ci="7" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="2"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="263" mi="0" ci="10" mb="1" cb="1"/><line nr="264" mi="3" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="10" mb="1" cb="1"/><line nr="272" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="0" ci="12" mb="0" cb="2"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="10" mb="1" cb="1"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="0" ci="12" mb="1" cb="1"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="5" ci="3" mb="3" cb="1"/><line nr="293" mi="8" ci="0" mb="2" cb="0"/><line nr="294" mi="6" ci="0" mb="0" cb="0"/><line nr="296" mi="1" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="303" mi="1" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="2" cb="0"/><line nr="307" mi="5" ci="0" mb="0" cb="0"/><line nr="309" mi="2" ci="0" mb="0" cb="0"/><line nr="310" mi="1" ci="0" mb="0" cb="0"/><line nr="312" mi="3" ci="0" mb="0" cb="0"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="319" mi="6" ci="0" mb="2" cb="0"/><line nr="320" mi="7" ci="0" mb="0" cb="0"/><line nr="322" mi="28" ci="0" mb="0" cb="0"/><line nr="327" mi="6" ci="0" mb="0" cb="0"/><line nr="329" mi="1" ci="0" mb="0" cb="0"/><line nr="331" mi="20" ci="0" mb="0" cb="0"/><line nr="333" mi="1" ci="0" mb="0" cb="0"/><line nr="335" mi="3" ci="0" mb="2" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="339" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="2" ci="0" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="2" mb="0" cb="0"/><line nr="356" mi="6" ci="0" mb="0" cb="0"/><line nr="365" mi="6" ci="0" mb="0" cb="0"/><line nr="370" mi="0" ci="6" mb="0" cb="0"/><line nr="375" mi="0" ci="6" mb="0" cb="0"/><line nr="380" mi="0" ci="6" mb="0" cb="0"/><line nr="385" mi="0" ci="6" mb="0" cb="0"/><line nr="391" mi="0" ci="6" mb="0" cb="0"/><line nr="392" mi="0" ci="8" mb="1" cb="1"/><line nr="393" mi="7" ci="0" mb="0" cb="0"/><line nr="394" mi="0" ci="1" mb="0" cb="0"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="3" mb="0" cb="0"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="6" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="0"/><line nr="406" mi="0" ci="4" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="0"/><line nr="408" mi="0" ci="4" mb="0" cb="0"/><line nr="409" mi="0" ci="1" mb="0" cb="0"/><line nr="415" mi="6" ci="0" mb="0" cb="0"/><line nr="416" mi="1" ci="0" mb="0" cb="0"/><line nr="421" mi="6" ci="0" mb="0" cb="0"/><line nr="422" mi="1" ci="0" mb="0" cb="0"/><line nr="427" mi="3" ci="0" mb="0" cb="0"/><line nr="428" mi="3" ci="0" mb="0" cb="0"/><line nr="429" mi="5" ci="0" mb="0" cb="0"/><line nr="431" mi="8" ci="0" mb="4" cb="0"/><line nr="433" mi="6" ci="0" mb="0" cb="0"/><line nr="434" mi="4" ci="0" mb="0" cb="0"/><line nr="435" mi="4" ci="0" mb="0" cb="0"/><line nr="436" mi="4" ci="0" mb="0" cb="0"/><line nr="437" mi="4" ci="0" mb="0" cb="0"/><line nr="439" mi="6" ci="0" mb="0" cb="0"/><line nr="440" mi="9" ci="0" mb="0" cb="0"/><line nr="441" mi="6" ci="0" mb="0" cb="0"/><line nr="442" mi="1" ci="0" mb="0" cb="0"/><line nr="448" mi="6" ci="0" mb="0" cb="0"/><line nr="449" mi="1" ci="0" mb="0" cb="0"/><line nr="454" mi="6" ci="0" mb="0" cb="0"/><line nr="455" mi="1" ci="0" mb="0" cb="0"/><line nr="460" mi="5" ci="12" mb="1" cb="1"/><line nr="461" mi="0" ci="1" mb="0" cb="0"/><line nr="467" mi="9" ci="0" mb="0" cb="0"/><line nr="468" mi="1" ci="0" mb="0" cb="0"/><line nr="474" mi="0" ci="7" mb="0" cb="0"/><line nr="475" mi="0" ci="1" mb="0" cb="0"/><line nr="481" mi="6" ci="0" mb="0" cb="0"/><line nr="482" mi="1" ci="0" mb="0" cb="0"/><line nr="487" mi="7" ci="0" mb="0" cb="0"/><line nr="488" mi="1" ci="0" mb="0" cb="0"/><line nr="493" mi="6" ci="0" mb="0" cb="0"/><line nr="494" mi="1" ci="0" mb="0" cb="0"/><line nr="500" mi="17" ci="0" mb="2" cb="0"/><line nr="501" mi="1" ci="0" mb="0" cb="0"/><line nr="507" mi="9" ci="0" mb="0" cb="0"/><line nr="508" mi="1" ci="0" mb="0" cb="0"/><line nr="513" mi="7" ci="0" mb="0" cb="0"/><line nr="514" mi="1" ci="0" mb="0" cb="0"/><line nr="519" mi="6" ci="0" mb="0" cb="0"/><line nr="520" mi="1" ci="0" mb="0" cb="0"/><line nr="524" mi="7" ci="0" mb="0" cb="0"/><line nr="525" mi="1" ci="0" mb="0" cb="0"/><line nr="530" mi="6" ci="0" mb="0" cb="0"/><line nr="531" mi="1" ci="0" mb="0" cb="0"/><line nr="536" mi="0" ci="5" mb="1" cb="1"/><line nr="537" mi="0" ci="15" mb="0" cb="0"/><line nr="539" mi="29" ci="0" mb="0" cb="0"/><line nr="546" mi="3" ci="0" mb="0" cb="0"/><line nr="548" mi="6" ci="0" mb="2" cb="0"/><line nr="549" mi="13" ci="0" mb="0" cb="0"/><line nr="552" mi="20" ci="0" mb="0" cb="0"/><line nr="554" mi="15" ci="0" mb="0" cb="0"/><line nr="557" mi="2" ci="0" mb="0" cb="0"/><line nr="563" mi="3" ci="0" mb="0" cb="0"/><line nr="564" mi="3" ci="0" mb="0" cb="0"/><line nr="565" mi="3" ci="0" mb="0" cb="0"/><line nr="566" mi="3" ci="0" mb="0" cb="0"/><line nr="567" mi="1" ci="0" mb="0" cb="0"/><line nr="574" mi="3" ci="0" mb="0" cb="0"/><line nr="577" mi="5" ci="0" mb="2" cb="0"/><line nr="579" mi="12" ci="0" mb="0" cb="0"/><line nr="583" mi="14" ci="0" mb="0" cb="0"/><line nr="586" mi="6" ci="0" mb="0" cb="0"/><line nr="587" mi="4" ci="0" mb="0" cb="0"/><line nr="589" mi="23" ci="0" mb="4" cb="0"/><line nr="591" mi="5" ci="0" mb="0" cb="0"/><line nr="592" mi="12" ci="0" mb="0" cb="0"/><line nr="593" mi="7" ci="0" mb="0" cb="0"/><line nr="594" mi="2" ci="0" mb="0" cb="0"/><line nr="595" mi="2" ci="0" mb="0" cb="0"/><line nr="598" mi="3" ci="0" mb="2" cb="0"/><line nr="600" mi="6" ci="0" mb="0" cb="0"/><line nr="601" mi="7" ci="0" mb="0" cb="0"/><line nr="603" mi="4" ci="0" mb="2" cb="0"/><line nr="605" mi="18" ci="0" mb="2" cb="0"/><line nr="606" mi="7" ci="0" mb="0" cb="0"/><line nr="608" mi="6" ci="0" mb="0" cb="0"/><line nr="612" mi="6" ci="0" mb="0" cb="0"/><line nr="613" mi="6" ci="0" mb="0" cb="0"/><line nr="614" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="919" covered="398"/><counter type="BRANCH" missed="72" covered="27"/><counter type="LINE" missed="171" covered="83"/><counter type="COMPLEXITY" missed="75" covered="22"/><counter type="METHOD" missed="25" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ZCompilerTokenManager.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="4" cb="3"/><line nr="21" mi="0" ci="6" mb="0" cb="2"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="1" cb="1"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="1" cb="1"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="1" cb="1"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="2"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="2"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="1" cb="1"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="2" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="2" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="1" cb="1"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="2" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="2" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="2" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="2" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="2" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="4" cb="31"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="3" cb="14"/><line nr="200" mi="6" ci="0" mb="2" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="1" cb="1"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="2"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="6" mb="1" cb="1"/><line nr="213" mi="5" ci="0" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="2"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="2"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="2"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="2"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="6" ci="0" mb="2" cb="0"/><line nr="227" mi="6" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="6" mb="1" cb="1"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="6" ci="0" mb="2" cb="0"/><line nr="251" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="8" mb="0" cb="2"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><line nr="264" mi="5" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="3" cb="7"/><line nr="270" mi="0" ci="6" mb="0" cb="2"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="6" ci="0" mb="2" cb="0"/><line nr="275" mi="6" ci="0" mb="0" cb="0"/><line nr="278" mi="5" ci="0" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="6" mb="0" cb="2"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="8" mb="0" cb="2"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="1" ci="0" mb="0" cb="0"/><line nr="304" mi="5" ci="0" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="0" cb="0"/><line nr="306" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="2" cb="5"/><line nr="310" mi="0" ci="6" mb="1" cb="1"/><line nr="311" mi="0" ci="6" mb="0" cb="0"/><line nr="314" mi="0" ci="6" mb="1" cb="1"/><line nr="315" mi="6" ci="0" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="0" cb="2"/><line nr="317" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="5" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="330" mi="5" ci="0" mb="0" cb="0"/><line nr="334" mi="0" ci="8" mb="0" cb="2"/><line nr="335" mi="0" ci="5" mb="0" cb="0"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="1" ci="0" mb="0" cb="0"/><line nr="338" mi="5" ci="0" mb="0" cb="0"/><line nr="339" mi="2" ci="0" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="2" cb="4"/><line nr="344" mi="0" ci="6" mb="1" cb="1"/><line nr="345" mi="0" ci="6" mb="0" cb="0"/><line nr="348" mi="6" ci="0" mb="2" cb="0"/><line nr="349" mi="6" ci="0" mb="0" cb="0"/><line nr="350" mi="5" ci="0" mb="0" cb="0"/><line nr="352" mi="0" ci="6" mb="1" cb="1"/><line nr="353" mi="0" ci="6" mb="0" cb="0"/><line nr="356" mi="0" ci="5" mb="0" cb="0"/><line nr="358" mi="0" ci="6" mb="1" cb="1"/><line nr="359" mi="0" ci="6" mb="0" cb="0"/><line nr="364" mi="5" ci="0" mb="0" cb="0"/><line nr="368" mi="0" ci="8" mb="1" cb="1"/><line nr="369" mi="5" ci="0" mb="0" cb="0"/><line nr="370" mi="0" ci="5" mb="0" cb="0"/><line nr="371" mi="1" ci="0" mb="0" cb="0"/><line nr="372" mi="5" ci="0" mb="0" cb="0"/><line nr="373" mi="2" ci="0" mb="0" cb="0"/><line nr="374" mi="0" ci="1" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="2" cb="1"/><line nr="378" mi="0" ci="6" mb="1" cb="1"/><line nr="379" mi="0" ci="6" mb="0" cb="0"/><line nr="382" mi="5" ci="0" mb="0" cb="0"/><line nr="386" mi="5" ci="0" mb="0" cb="0"/><line nr="390" mi="8" ci="0" mb="2" cb="0"/><line nr="391" mi="5" ci="0" mb="0" cb="0"/><line nr="392" mi="5" ci="0" mb="0" cb="0"/><line nr="393" mi="1" ci="0" mb="0" cb="0"/><line nr="394" mi="5" ci="0" mb="0" cb="0"/><line nr="395" mi="2" ci="0" mb="0" cb="0"/><line nr="396" mi="1" ci="0" mb="0" cb="0"/><line nr="397" mi="3" ci="0" mb="2" cb="0"/><line nr="400" mi="6" ci="0" mb="2" cb="0"/><line nr="401" mi="6" ci="0" mb="0" cb="0"/><line nr="406" mi="5" ci="0" mb="0" cb="0"/><line nr="410" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="412" mi="0" ci="5" mb="0" cb="0"/><line nr="413" mi="5" ci="1" mb="0" cb="0"/><line nr="414" mi="0" ci="7" mb="0" cb="0"/><line nr="416" mi="0" ci="19" mb="0" cb="0"/><line nr="419" mi="0" ci="19" mb="0" cb="0"/><line nr="422" mi="0" ci="19" mb="0" cb="0"/><line nr="425" mi="0" ci="19" mb="0" cb="0"/><line nr="428" mi="0" ci="19" mb="0" cb="0"/><line nr="431" mi="0" ci="19" mb="0" cb="0"/><line nr="434" mi="0" ci="19" mb="0" cb="0"/><line nr="437" mi="0" ci="19" mb="0" cb="0"/><line nr="442" mi="0" ci="2" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="444" mi="0" ci="2" mb="0" cb="0"/><line nr="445" mi="0" ci="5" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="0"/><line nr="449" mi="0" ci="9" mb="1" cb="1"/><line nr="450" mi="2" ci="0" mb="0" cb="0"/><line nr="451" mi="0" ci="4" mb="0" cb="2"/><line nr="453" mi="0" ci="5" mb="0" cb="0"/><line nr="456" mi="0" ci="6" mb="43" cb="18"/><line nr="459" mi="0" ci="4" mb="1" cb="1"/><line nr="460" mi="5" ci="0" mb="0" cb="0"/><line nr="461" mi="0" ci="4" mb="0" cb="2"/><line nr="462" mi="0" ci="5" mb="0" cb="0"/><line nr="466" mi="0" ci="6" mb="0" cb="2"/><line nr="467" mi="0" ci="1" mb="0" cb="0"/><line nr="468" mi="0" ci="3" mb="1" cb="1"/><line nr="469" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="1" mb="0" cb="0"/><line nr="473" mi="0" ci="4" mb="1" cb="1"/><line nr="474" mi="4" ci="0" mb="0" cb="0"/><line nr="475" mi="0" ci="4" mb="0" cb="2"/><line nr="476" mi="0" ci="4" mb="0" cb="0"/><line nr="479" mi="0" ci="6" mb="0" cb="2"/><line nr="480" mi="0" ci="5" mb="0" cb="0"/><line nr="481" mi="0" ci="6" mb="1" cb="1"/><line nr="482" mi="0" ci="5" mb="0" cb="0"/><line nr="483" mi="4" ci="0" mb="2" cb="0"/><line nr="484" mi="5" ci="0" mb="0" cb="0"/><line nr="485" mi="4" ci="0" mb="2" cb="0"/><line nr="486" mi="5" ci="0" mb="0" cb="0"/><line nr="487" mi="4" ci="0" mb="2" cb="0"/><line nr="489" mi="3" ci="0" mb="2" cb="0"/><line nr="490" mi="2" ci="0" mb="0" cb="0"/><line nr="491" mi="4" ci="0" mb="0" cb="0"/><line nr="493" mi="4" ci="0" mb="2" cb="0"/><line nr="494" mi="3" ci="0" mb="0" cb="0"/><line nr="495" mi="0" ci="6" mb="0" cb="2"/><line nr="497" mi="0" ci="3" mb="1" cb="1"/><line nr="498" mi="0" ci="2" mb="0" cb="0"/><line nr="499" mi="0" ci="5" mb="0" cb="0"/><line nr="501" mi="0" ci="4" mb="0" cb="2"/><line nr="503" mi="0" ci="3" mb="1" cb="1"/><line nr="504" mi="0" ci="2" mb="0" cb="0"/><line nr="505" mi="0" ci="5" mb="0" cb="0"/><line nr="507" mi="0" ci="4" mb="1" cb="1"/><line nr="508" mi="5" ci="0" mb="0" cb="0"/><line nr="511" mi="0" ci="6" mb="0" cb="2"/><line nr="512" mi="0" ci="1" mb="0" cb="0"/><line nr="513" mi="0" ci="3" mb="1" cb="1"/><line nr="514" mi="0" ci="2" mb="0" cb="0"/><line nr="515" mi="0" ci="4" mb="0" cb="0"/><line nr="516" mi="0" ci="1" mb="0" cb="0"/><line nr="518" mi="4" ci="0" mb="2" cb="0"/><line nr="519" mi="4" ci="0" mb="0" cb="0"/><line nr="522" mi="6" ci="0" mb="2" cb="0"/><line nr="523" mi="1" ci="0" mb="0" cb="0"/><line nr="524" mi="3" ci="0" mb="2" cb="0"/><line nr="525" mi="2" ci="0" mb="0" cb="0"/><line nr="526" mi="4" ci="0" mb="0" cb="0"/><line nr="527" mi="1" ci="0" mb="0" cb="0"/><line nr="529" mi="6" ci="0" mb="2" cb="0"/><line nr="530" mi="4" ci="0" mb="0" cb="0"/><line nr="533" mi="6" ci="0" mb="2" cb="0"/><line nr="534" mi="1" ci="0" mb="0" cb="0"/><line nr="535" mi="3" ci="0" mb="2" cb="0"/><line nr="536" mi="2" ci="0" mb="0" cb="0"/><line nr="537" mi="4" ci="0" mb="0" cb="0"/><line nr="538" mi="1" ci="0" mb="0" cb="0"/><line nr="540" mi="4" ci="0" mb="2" cb="0"/><line nr="541" mi="5" ci="0" mb="0" cb="0"/><line nr="544" mi="6" ci="0" mb="2" cb="0"/><line nr="545" mi="4" ci="0" mb="0" cb="0"/><line nr="548" mi="7" ci="0" mb="4" cb="0"/><line nr="549" mi="3" ci="0" mb="0" cb="0"/><line nr="552" mi="6" ci="0" mb="2" cb="0"/><line nr="553" mi="4" ci="0" mb="0" cb="0"/><line nr="556" mi="6" ci="0" mb="2" cb="0"/><line nr="557" mi="5" ci="0" mb="0" cb="0"/><line nr="560" mi="6" ci="0" mb="2" cb="0"/><line nr="561" mi="4" ci="0" mb="0" cb="0"/><line nr="564" mi="6" ci="0" mb="2" cb="0"/><line nr="565" mi="12" ci="0" mb="0" cb="0"/><line nr="568" mi="6" ci="0" mb="2" cb="0"/><line nr="569" mi="4" ci="0" mb="0" cb="0"/><line nr="573" mi="6" ci="0" mb="2" cb="0"/><line nr="574" mi="5" ci="0" mb="0" cb="0"/><line nr="577" mi="0" ci="6" mb="0" cb="2"/><line nr="578" mi="0" ci="5" mb="0" cb="0"/><line nr="581" mi="0" ci="9" mb="1" cb="3"/><line nr="582" mi="0" ci="3" mb="0" cb="0"/><line nr="585" mi="6" ci="0" mb="2" cb="0"/><line nr="586" mi="5" ci="0" mb="0" cb="0"/><line nr="589" mi="6" ci="0" mb="2" cb="0"/><line nr="590" mi="5" ci="0" mb="0" cb="0"/><line nr="593" mi="6" ci="0" mb="2" cb="0"/><line nr="594" mi="12" ci="0" mb="0" cb="0"/><line nr="597" mi="6" ci="0" mb="2" cb="0"/><line nr="598" mi="4" ci="0" mb="0" cb="0"/><line nr="601" mi="6" ci="0" mb="2" cb="0"/><line nr="602" mi="5" ci="0" mb="0" cb="0"/><line nr="605" mi="4" ci="0" mb="2" cb="0"/><line nr="606" mi="5" ci="0" mb="0" cb="0"/><line nr="609" mi="6" ci="0" mb="2" cb="0"/><line nr="610" mi="5" ci="0" mb="0" cb="0"/><line nr="613" mi="6" ci="0" mb="2" cb="0"/><line nr="614" mi="5" ci="0" mb="0" cb="0"/><line nr="617" mi="6" ci="0" mb="2" cb="0"/><line nr="618" mi="12" ci="0" mb="0" cb="0"/><line nr="621" mi="6" ci="0" mb="2" cb="0"/><line nr="622" mi="4" ci="0" mb="0" cb="0"/><line nr="625" mi="4" ci="0" mb="2" cb="0"/><line nr="626" mi="1" ci="0" mb="0" cb="0"/><line nr="627" mi="3" ci="0" mb="2" cb="0"/><line nr="628" mi="2" ci="0" mb="0" cb="0"/><line nr="629" mi="3" ci="0" mb="0" cb="0"/><line nr="630" mi="1" ci="0" mb="0" cb="0"/><line nr="632" mi="6" ci="0" mb="2" cb="0"/><line nr="633" mi="5" ci="0" mb="0" cb="0"/><line nr="636" mi="0" ci="6" mb="0" cb="2"/><line nr="637" mi="0" ci="5" mb="0" cb="0"/><line nr="640" mi="0" ci="4" mb="0" cb="2"/><line nr="641" mi="0" ci="1" mb="0" cb="0"/><line nr="642" mi="0" ci="3" mb="1" cb="1"/><line nr="643" mi="0" ci="2" mb="0" cb="0"/><line nr="644" mi="0" ci="4" mb="0" cb="0"/><line nr="645" mi="0" ci="1" mb="0" cb="0"/><line nr="647" mi="0" ci="6" mb="0" cb="2"/><line nr="648" mi="0" ci="1" mb="0" cb="0"/><line nr="649" mi="0" ci="3" mb="1" cb="1"/><line nr="650" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="0" ci="4" mb="0" cb="0"/><line nr="652" mi="0" ci="1" mb="0" cb="0"/><line nr="654" mi="6" ci="0" mb="2" cb="0"/><line nr="655" mi="4" ci="0" mb="0" cb="0"/><line nr="658" mi="6" ci="0" mb="2" cb="0"/><line nr="659" mi="1" ci="0" mb="0" cb="0"/><line nr="660" mi="3" ci="0" mb="2" cb="0"/><line nr="661" mi="2" ci="0" mb="0" cb="0"/><line nr="662" mi="4" ci="0" mb="0" cb="0"/><line nr="663" mi="1" ci="0" mb="0" cb="0"/><line nr="665" mi="0" ci="6" mb="0" cb="2"/><line nr="666" mi="0" ci="5" mb="0" cb="0"/><line nr="669" mi="6" ci="0" mb="2" cb="0"/><line nr="670" mi="4" ci="0" mb="0" cb="0"/><line nr="673" mi="6" ci="0" mb="2" cb="0"/><line nr="674" mi="1" ci="0" mb="0" cb="0"/><line nr="675" mi="3" ci="0" mb="2" cb="0"/><line nr="676" mi="2" ci="0" mb="0" cb="0"/><line nr="677" mi="4" ci="0" mb="0" cb="0"/><line nr="678" mi="1" ci="0" mb="0" cb="0"/><line nr="680" mi="0" ci="6" mb="0" cb="2"/><line nr="681" mi="0" ci="5" mb="0" cb="0"/><line nr="684" mi="6" ci="0" mb="2" cb="0"/><line nr="685" mi="4" ci="0" mb="0" cb="0"/><line nr="688" mi="6" ci="0" mb="2" cb="0"/><line nr="689" mi="5" ci="0" mb="0" cb="0"/><line nr="692" mi="4" ci="0" mb="2" cb="0"/><line nr="693" mi="1" ci="0" mb="0" cb="0"/><line nr="694" mi="3" ci="0" mb="2" cb="0"/><line nr="695" mi="2" ci="0" mb="0" cb="0"/><line nr="696" mi="4" ci="0" mb="0" cb="0"/><line nr="697" mi="1" ci="0" mb="0" cb="0"/><line nr="699" mi="6" ci="0" mb="2" cb="0"/><line nr="700" mi="1" ci="0" mb="0" cb="0"/><line nr="701" mi="3" ci="0" mb="2" cb="0"/><line nr="702" mi="2" ci="0" mb="0" cb="0"/><line nr="703" mi="4" ci="0" mb="0" cb="0"/><line nr="704" mi="1" ci="0" mb="0" cb="0"/><line nr="706" mi="0" ci="6" mb="1" cb="1"/><line nr="707" mi="0" ci="1" mb="0" cb="0"/><line nr="708" mi="3" ci="0" mb="2" cb="0"/><line nr="709" mi="2" ci="0" mb="0" cb="0"/><line nr="710" mi="4" ci="0" mb="0" cb="0"/><line nr="711" mi="1" ci="0" mb="0" cb="0"/><line nr="713" mi="4" ci="0" mb="2" cb="0"/><line nr="714" mi="5" ci="0" mb="0" cb="0"/><line nr="717" mi="0" ci="7" mb="1" cb="3"/><line nr="718" mi="0" ci="3" mb="0" cb="0"/><line nr="721" mi="4" ci="0" mb="2" cb="0"/><line nr="722" mi="4" ci="0" mb="0" cb="0"/><line nr="725" mi="4" ci="0" mb="2" cb="0"/><line nr="726" mi="5" ci="0" mb="0" cb="0"/><line nr="729" mi="0" ci="6" mb="0" cb="2"/><line nr="730" mi="0" ci="5" mb="0" cb="0"/><line nr="733" mi="0" ci="9" mb="1" cb="3"/><line nr="734" mi="0" ci="3" mb="0" cb="0"/><line nr="737" mi="7" ci="0" mb="4" cb="0"/><line nr="738" mi="3" ci="0" mb="0" cb="0"/><line nr="741" mi="0" ci="4" mb="1" cb="1"/><line nr="742" mi="12" ci="0" mb="0" cb="0"/><line nr="745" mi="4" ci="0" mb="2" cb="0"/><line nr="746" mi="5" ci="0" mb="0" cb="0"/><line nr="749" mi="6" ci="0" mb="2" cb="0"/><line nr="750" mi="5" ci="0" mb="0" cb="0"/><line nr="753" mi="4" ci="0" mb="2" cb="0"/><line nr="754" mi="5" ci="0" mb="0" cb="0"/><line nr="757" mi="6" ci="0" mb="2" cb="0"/><line nr="758" mi="5" ci="0" mb="0" cb="0"/><line nr="761" mi="6" ci="0" mb="2" cb="0"/><line nr="762" mi="5" ci="0" mb="0" cb="0"/><line nr="765" mi="7" ci="0" mb="4" cb="0"/><line nr="766" mi="3" ci="0" mb="0" cb="0"/><line nr="770" mi="0" ci="3" mb="0" cb="2"/><line nr="771" mi="0" ci="1" mb="0" cb="0"/><line nr="772" mi="0" ci="4" mb="1" cb="1"/><line nr="774" mi="0" ci="7" mb="0" cb="0"/><line nr="777" mi="0" ci="6" mb="24" cb="41"/><line nr="780" mi="0" ci="6" mb="1" cb="1"/><line nr="782" mi="0" ci="3" mb="1" cb="1"/><line nr="783" mi="0" ci="2" mb="0" cb="0"/><line nr="784" mi="0" ci="3" mb="0" cb="0"/><line nr="786" mi="0" ci="4" mb="1" cb="1"/><line nr="787" mi="0" ci="11" mb="0" cb="0"/><line nr="788" mi="0" ci="4" mb="1" cb="1"/><line nr="789" mi="0" ci="12" mb="0" cb="0"/><line nr="792" mi="0" ci="6" mb="1" cb="1"/><line nr="794" mi="0" ci="3" mb="1" cb="1"/><line nr="795" mi="0" ci="2" mb="0" cb="0"/><line nr="796" mi="0" ci="4" mb="0" cb="0"/><line nr="798" mi="4" ci="0" mb="2" cb="0"/><line nr="799" mi="4" ci="0" mb="0" cb="0"/><line nr="800" mi="0" ci="4" mb="0" cb="2"/><line nr="801" mi="0" ci="5" mb="0" cb="0"/><line nr="802" mi="0" ci="4" mb="1" cb="1"/><line nr="803" mi="5" ci="0" mb="0" cb="0"/><line nr="804" mi="0" ci="4" mb="0" cb="2"/><line nr="805" mi="0" ci="5" mb="0" cb="0"/><line nr="808" mi="0" ci="9" mb="1" cb="3"/><line nr="809" mi="0" ci="3" mb="0" cb="0"/><line nr="812" mi="6" ci="0" mb="2" cb="0"/><line nr="813" mi="5" ci="0" mb="0" cb="0"/><line nr="816" mi="0" ci="9" mb="1" cb="3"/><line nr="817" mi="0" ci="3" mb="0" cb="0"/><line nr="820" mi="6" ci="0" mb="2" cb="0"/><line nr="821" mi="4" ci="0" mb="0" cb="0"/><line nr="824" mi="4" ci="0" mb="2" cb="0"/><line nr="825" mi="5" ci="0" mb="0" cb="0"/><line nr="828" mi="6" ci="0" mb="2" cb="0"/><line nr="829" mi="4" ci="0" mb="0" cb="0"/><line nr="832" mi="0" ci="6" mb="0" cb="2"/><line nr="833" mi="0" ci="5" mb="0" cb="0"/><line nr="836" mi="0" ci="4" mb="0" cb="2"/><line nr="837" mi="0" ci="5" mb="0" cb="0"/><line nr="840" mi="0" ci="6" mb="1" cb="1"/><line nr="841" mi="0" ci="5" mb="0" cb="0"/><line nr="844" mi="4" ci="0" mb="2" cb="0"/><line nr="845" mi="5" ci="0" mb="0" cb="0"/><line nr="848" mi="6" ci="0" mb="2" cb="0"/><line nr="849" mi="5" ci="0" mb="0" cb="0"/><line nr="852" mi="4" ci="0" mb="2" cb="0"/><line nr="853" mi="5" ci="0" mb="0" cb="0"/><line nr="856" mi="6" ci="0" mb="2" cb="0"/><line nr="857" mi="5" ci="0" mb="0" cb="0"/><line nr="860" mi="7" ci="0" mb="4" cb="0"/><line nr="861" mi="3" ci="0" mb="0" cb="0"/><line nr="864" mi="6" ci="0" mb="2" cb="0"/><line nr="865" mi="1" ci="0" mb="0" cb="0"/><line nr="866" mi="3" ci="0" mb="2" cb="0"/><line nr="867" mi="2" ci="0" mb="0" cb="0"/><line nr="868" mi="3" ci="0" mb="0" cb="0"/><line nr="869" mi="1" ci="0" mb="0" cb="0"/><line nr="871" mi="0" ci="6" mb="0" cb="2"/><line nr="872" mi="0" ci="1" mb="0" cb="0"/><line nr="873" mi="0" ci="3" mb="1" cb="1"/><line nr="874" mi="0" ci="2" mb="0" cb="0"/><line nr="875" mi="0" ci="3" mb="0" cb="0"/><line nr="876" mi="0" ci="1" mb="0" cb="0"/><line nr="878" mi="6" ci="0" mb="2" cb="0"/><line nr="879" mi="5" ci="0" mb="0" cb="0"/><line nr="882" mi="0" ci="6" mb="1" cb="1"/><line nr="883" mi="5" ci="0" mb="0" cb="0"/><line nr="886" mi="0" ci="6" mb="1" cb="1"/><line nr="887" mi="5" ci="0" mb="0" cb="0"/><line nr="890" mi="0" ci="6" mb="1" cb="1"/><line nr="891" mi="4" ci="0" mb="0" cb="0"/><line nr="894" mi="6" ci="0" mb="2" cb="0"/><line nr="895" mi="1" ci="0" mb="0" cb="0"/><line nr="896" mi="3" ci="0" mb="2" cb="0"/><line nr="897" mi="2" ci="0" mb="0" cb="0"/><line nr="898" mi="4" ci="0" mb="0" cb="0"/><line nr="899" mi="1" ci="0" mb="0" cb="0"/><line nr="901" mi="4" ci="0" mb="2" cb="0"/><line nr="902" mi="5" ci="0" mb="0" cb="0"/><line nr="905" mi="7" ci="0" mb="4" cb="0"/><line nr="906" mi="3" ci="0" mb="0" cb="0"/><line nr="910" mi="4" ci="0" mb="2" cb="0"/><line nr="911" mi="4" ci="0" mb="0" cb="0"/><line nr="914" mi="0" ci="4" mb="1" cb="1"/><line nr="915" mi="12" ci="0" mb="0" cb="0"/><line nr="918" mi="0" ci="4" mb="1" cb="1"/><line nr="919" mi="12" ci="0" mb="0" cb="0"/><line nr="922" mi="4" ci="0" mb="2" cb="0"/><line nr="923" mi="5" ci="0" mb="0" cb="0"/><line nr="926" mi="0" ci="7" mb="2" cb="2"/><line nr="927" mi="0" ci="3" mb="0" cb="0"/><line nr="930" mi="0" ci="4" mb="1" cb="1"/><line nr="931" mi="0" ci="12" mb="0" cb="0"/><line nr="934" mi="0" ci="4" mb="1" cb="1"/><line nr="935" mi="0" ci="12" mb="0" cb="0"/><line nr="938" mi="0" ci="4" mb="1" cb="1"/><line nr="939" mi="0" ci="12" mb="0" cb="0"/><line nr="942" mi="0" ci="4" mb="1" cb="1"/><line nr="943" mi="0" ci="12" mb="0" cb="0"/><line nr="946" mi="0" ci="4" mb="1" cb="1"/><line nr="947" mi="0" ci="12" mb="0" cb="0"/><line nr="950" mi="0" ci="7" mb="2" cb="2"/><line nr="951" mi="0" ci="3" mb="0" cb="0"/><line nr="954" mi="0" ci="4" mb="1" cb="1"/><line nr="955" mi="0" ci="12" mb="0" cb="0"/><line nr="958" mi="4" ci="0" mb="2" cb="0"/><line nr="959" mi="12" ci="0" mb="0" cb="0"/><line nr="962" mi="0" ci="4" mb="0" cb="0"/><line nr="963" mi="0" ci="1" mb="0" cb="0"/><line nr="965" mi="4" ci="0" mb="0" cb="0"/><line nr="966" mi="1" ci="0" mb="0" cb="0"/><line nr="969" mi="4" ci="0" mb="0" cb="0"/><line nr="970" mi="1" ci="0" mb="0" cb="0"/><line nr="972" mi="4" ci="0" mb="2" cb="0"/><line nr="973" mi="5" ci="0" mb="0" cb="0"/><line nr="976" mi="0" ci="7" mb="2" cb="2"/><line nr="977" mi="0" ci="3" mb="0" cb="0"/><line nr="980" mi="0" ci="4" mb="1" cb="1"/><line nr="981" mi="0" ci="12" mb="0" cb="0"/><line nr="984" mi="0" ci="4" mb="1" cb="1"/><line nr="985" mi="0" ci="12" mb="0" cb="0"/><line nr="988" mi="0" ci="4" mb="1" cb="1"/><line nr="989" mi="0" ci="12" mb="0" cb="0"/><line nr="992" mi="0" ci="4" mb="1" cb="1"/><line nr="993" mi="0" ci="12" mb="0" cb="0"/><line nr="996" mi="0" ci="4" mb="1" cb="1"/><line nr="997" mi="0" ci="12" mb="0" cb="0"/><line nr="1000" mi="0" ci="4" mb="1" cb="1"/><line nr="1001" mi="0" ci="12" mb="0" cb="0"/><line nr="1004" mi="0" ci="4" mb="1" cb="1"/><line nr="1005" mi="0" ci="12" mb="0" cb="0"/><line nr="1008" mi="0" ci="4" mb="1" cb="1"/><line nr="1009" mi="0" ci="12" mb="0" cb="0"/><line nr="1012" mi="0" ci="4" mb="1" cb="1"/><line nr="1013" mi="0" ci="12" mb="0" cb="0"/><line nr="1016" mi="0" ci="4" mb="0" cb="2"/><line nr="1017" mi="0" ci="12" mb="0" cb="0"/><line nr="1020" mi="0" ci="4" mb="1" cb="1"/><line nr="1021" mi="0" ci="12" mb="0" cb="0"/><line nr="1024" mi="0" ci="7" mb="1" cb="3"/><line nr="1025" mi="0" ci="3" mb="0" cb="0"/><line nr="1028" mi="0" ci="4" mb="1" cb="1"/><line nr="1029" mi="0" ci="12" mb="0" cb="0"/><line nr="1032" mi="7" ci="0" mb="4" cb="0"/><line nr="1033" mi="3" ci="0" mb="0" cb="0"/><line nr="1036" mi="4" ci="0" mb="2" cb="0"/><line nr="1037" mi="12" ci="0" mb="0" cb="0"/><line nr="1040" mi="4" ci="0" mb="2" cb="0"/><line nr="1041" mi="12" ci="0" mb="0" cb="0"/><line nr="1044" mi="4" ci="0" mb="2" cb="0"/><line nr="1045" mi="12" ci="0" mb="0" cb="0"/><line nr="1048" mi="0" ci="4" mb="0" cb="2"/><line nr="1049" mi="0" ci="12" mb="0" cb="0"/><line nr="1052" mi="0" ci="4" mb="1" cb="1"/><line nr="1053" mi="0" ci="12" mb="0" cb="0"/><line nr="1056" mi="0" ci="7" mb="1" cb="3"/><line nr="1057" mi="0" ci="3" mb="0" cb="0"/><line nr="1060" mi="0" ci="4" mb="1" cb="1"/><line nr="1061" mi="0" ci="12" mb="0" cb="0"/><line nr="1065" mi="0" ci="3" mb="0" cb="2"/><line nr="1066" mi="0" ci="1" mb="0" cb="0"/><line nr="1069" mi="5" ci="0" mb="0" cb="0"/><line nr="1070" mi="4" ci="0" mb="0" cb="0"/><line nr="1071" mi="6" ci="0" mb="0" cb="0"/><line nr="1072" mi="7" ci="0" mb="0" cb="0"/><line nr="1073" mi="7" ci="0" mb="0" cb="0"/><line nr="1076" mi="6" ci="0" mb="9" cb="0"/><line nr="1080" mi="7" ci="0" mb="2" cb="0"/><line nr="1081" mi="1" ci="0" mb="0" cb="0"/><line nr="1082" mi="3" ci="0" mb="2" cb="0"/><line nr="1083" mi="2" ci="0" mb="0" cb="0"/><line nr="1084" mi="3" ci="0" mb="0" cb="0"/><line nr="1085" mi="1" ci="0" mb="0" cb="0"/><line nr="1087" mi="7" ci="0" mb="2" cb="0"/><line nr="1088" mi="1" ci="0" mb="0" cb="0"/><line nr="1089" mi="3" ci="0" mb="2" cb="0"/><line nr="1090" mi="2" ci="0" mb="0" cb="0"/><line nr="1091" mi="3" ci="0" mb="0" cb="0"/><line nr="1092" mi="1" ci="0" mb="0" cb="0"/><line nr="1094" mi="7" ci="0" mb="2" cb="0"/><line nr="1095" mi="12" ci="0" mb="0" cb="0"/><line nr="1098" mi="7" ci="0" mb="2" cb="0"/><line nr="1099" mi="5" ci="0" mb="0" cb="0"/><line nr="1102" mi="7" ci="0" mb="2" cb="0"/><line nr="1103" mi="5" ci="0" mb="0" cb="0"/><line nr="1106" mi="7" ci="0" mb="2" cb="0"/><line nr="1107" mi="5" ci="0" mb="0" cb="0"/><line nr="1110" mi="7" ci="0" mb="2" cb="0"/><line nr="1111" mi="5" ci="0" mb="0" cb="0"/><line nr="1115" mi="7" ci="0" mb="2" cb="0"/><line nr="1116" mi="5" ci="0" mb="0" cb="0"/><line nr="1120" mi="3" ci="0" mb="2" cb="0"/><line nr="1122" mi="0" ci="3" mb="0" cb="2"/><line nr="1124" mi="0" ci="3" mb="0" cb="0"/><line nr="1125" mi="0" ci="3" mb="0" cb="0"/><line nr="1126" mi="0" ci="2" mb="0" cb="0"/><line nr="1128" mi="0" ci="1" mb="0" cb="0"/><line nr="1129" mi="0" ci="13" mb="0" cb="2"/><line nr="1130" mi="0" ci="2" mb="0" cb="0"/><line nr="1131" mi="0" ci="5" mb="0" cb="0"/><line nr="1132" mi="0" ci="4" mb="0" cb="0"/><line nr="1135" mi="0" ci="283" mb="0" cb="0"/><line nr="1144" mi="2" ci="0" mb="2" cb="0"/><line nr="1147" mi="12" ci="0" mb="2" cb="0"/><line nr="1149" mi="8" ci="0" mb="2" cb="0"/><line nr="1150" mi="2" ci="0" mb="0" cb="0"/><line nr="1151" mi="2" ci="0" mb="0" cb="0"/><line nr="1156" mi="2" ci="0" mb="6" cb="0"/><line nr="1159" mi="12" ci="0" mb="2" cb="0"/><line nr="1161" mi="12" ci="0" mb="2" cb="0"/><line nr="1163" mi="12" ci="0" mb="2" cb="0"/><line nr="1165" mi="12" ci="0" mb="2" cb="0"/><line nr="1167" mi="12" ci="0" mb="2" cb="0"/><line nr="1169" mi="8" ci="0" mb="2" cb="0"/><line nr="1170" mi="2" ci="0" mb="0" cb="0"/><line nr="1171" mi="2" ci="0" mb="0" cb="0"/><line nr="1176" mi="0" ci="283" mb="0" cb="0"/><line nr="1187" mi="0" ci="7" mb="0" cb="0"/><line nr="1190" mi="0" ci="11" mb="0" cb="0"/><line nr="1193" mi="0" ci="12" mb="0" cb="0"/><line nr="1197" mi="0" ci="4" mb="0" cb="0"/><line nr="1198" mi="0" ci="4" mb="0" cb="0"/><line nr="1201" mi="0" ci="2" mb="0" cb="0"/><line nr="1204" mi="0" ci="3" mb="0" cb="0"/><line nr="1205" mi="0" ci="1" mb="0" cb="0"/><line nr="1209" mi="3" ci="0" mb="0" cb="0"/><line nr="1210" mi="3" ci="0" mb="0" cb="0"/><line nr="1211" mi="1" ci="0" mb="0" cb="0"/><line nr="1216" mi="6" ci="0" mb="0" cb="0"/><line nr="1217" mi="4" ci="0" mb="0" cb="0"/><line nr="1218" mi="3" ci="0" mb="0" cb="0"/><line nr="1219" mi="2" ci="0" mb="0" cb="0"/><line nr="1220" mi="1" ci="0" mb="0" cb="0"/><line nr="1224" mi="3" ci="0" mb="0" cb="0"/><line nr="1225" mi="5" ci="0" mb="2" cb="0"/><line nr="1226" mi="6" ci="0" mb="0" cb="0"/><line nr="1227" mi="1" ci="0" mb="0" cb="0"/><line nr="1232" mi="3" ci="0" mb="0" cb="0"/><line nr="1233" mi="3" ci="0" mb="0" cb="0"/><line nr="1234" mi="1" ci="0" mb="0" cb="0"/><line nr="1239" mi="5" ci="0" mb="4" cb="0"/><line nr="1240" mi="15" ci="0" mb="0" cb="0"/><line nr="1242" mi="3" ci="0" mb="0" cb="0"/><line nr="1243" mi="1" ci="0" mb="0" cb="0"/><line nr="1253" mi="0" ci="5" mb="0" cb="0"/><line nr="1254" mi="0" ci="8" mb="0" cb="2"/><line nr="1255" mi="0" ci="4" mb="0" cb="0"/><line nr="1256" mi="0" ci="4" mb="0" cb="0"/><line nr="1257" mi="0" ci="4" mb="0" cb="0"/><line nr="1258" mi="0" ci="4" mb="0" cb="0"/><line nr="1259" mi="0" ci="5" mb="0" cb="0"/><line nr="1261" mi="0" ci="3" mb="0" cb="0"/><line nr="1262" mi="0" ci="3" mb="0" cb="0"/><line nr="1263" mi="0" ci="3" mb="0" cb="0"/><line nr="1264" mi="0" ci="3" mb="0" cb="0"/><line nr="1266" mi="0" ci="2" mb="0" cb="0"/><line nr="1269" mi="0" ci="3" mb="0" cb="0"/><line nr="1270" mi="0" ci="3" mb="0" cb="0"/><line nr="1280" mi="0" ci="2" mb="0" cb="0"/><line nr="1287" mi="0" ci="5" mb="0" cb="0"/><line nr="1289" mi="0" ci="1" mb="0" cb="0"/><line nr="1291" mi="0" ci="3" mb="0" cb="0"/><line nr="1292" mi="0" ci="3" mb="0" cb="0"/><line nr="1293" mi="0" ci="2" mb="0" cb="0"/><line nr="1294" mi="0" ci="1" mb="0" cb="0"/><line nr="1296" mi="0" ci="4" mb="0" cb="0"/><line nr="1297" mi="0" ci="13" mb="1" cb="3"/><line nr="1298" mi="0" ci="6" mb="0" cb="0"/><line nr="1300" mi="0" ci="3" mb="0" cb="0"/><line nr="1301" mi="0" ci="3" mb="0" cb="0"/><line nr="1302" mi="0" ci="3" mb="0" cb="0"/><line nr="1303" mi="0" ci="3" mb="0" cb="0"/><line nr="1304" mi="0" ci="4" mb="1" cb="1"/><line nr="1306" mi="0" ci="6" mb="0" cb="2"/><line nr="1307" mi="0" ci="9" mb="0" cb="0"/><line nr="1308" mi="0" ci="16" mb="0" cb="2"/><line nr="1310" mi="0" ci="3" mb="0" cb="0"/><line nr="1311" mi="0" ci="2" mb="0" cb="0"/><line nr="1318" mi="4" ci="0" mb="0" cb="0"/><line nr="1319" mi="4" ci="0" mb="0" cb="0"/><line nr="1320" mi="2" ci="0" mb="0" cb="0"/><line nr="1321" mi="2" ci="0" mb="0" cb="0"/><line nr="1322" mi="8" ci="0" mb="0" cb="0"/><line nr="1323" mi="1" ci="0" mb="0" cb="0"/><line nr="1324" mi="2" ci="0" mb="0" cb="0"/><line nr="1325" mi="9" ci="0" mb="2" cb="0"/><line nr="1326" mi="8" ci="0" mb="4" cb="0"/><line nr="1327" mi="1" ci="0" mb="0" cb="0"/><line nr="1328" mi="3" ci="0" mb="0" cb="0"/><line nr="1331" mi="1" ci="0" mb="0" cb="0"/><line nr="1332" mi="1" ci="0" mb="0" cb="0"/><line nr="1333" mi="2" ci="0" mb="2" cb="0"/><line nr="1334" mi="4" ci="0" mb="0" cb="0"/><line nr="1335" mi="9" ci="0" mb="2" cb="0"/><line nr="1337" mi="13" ci="0" mb="0" cb="0"/><line nr="1343" mi="0" ci="7" mb="1" cb="1"/><line nr="1345" mi="0" ci="11" mb="0" cb="0"/><line nr="1346" mi="0" ci="6" mb="0" cb="0"/><line nr="1348" mi="0" ci="1" mb="0" cb="0"/><line nr="1352" mi="0" ci="13" mb="0" cb="0"/><line nr="1353" mi="0" ci="4" mb="0" cb="2"/><line nr="1354" mi="0" ci="1" mb="0" cb="0"/><line nr="1357" mi="0" ci="3" mb="0" cb="0"/><line nr="1358" mi="0" ci="3" mb="0" cb="0"/><line nr="1359" mi="0" ci="1" mb="0" cb="0"/><line nr="1364" mi="0" ci="5" mb="0" cb="0"/><line nr="1365" mi="0" ci="4" mb="0" cb="2"/><line nr="1366" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1612" covered="2565"/><counter type="BRANCH" missed="444" covered="308"/><counter type="LINE" missed="360" covered="393"/><counter type="COMPLEXITY" missed="319" covered="187"/><counter type="METHOD" missed="9" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="4961" covered="6590"/><counter type="BRANCH" missed="810" covered="770"/><counter type="LINE" missed="912" covered="1265"/><counter type="COMPLEXITY" missed="645" covered="515"/><counter type="METHOD" missed="66" covered="162"/><counter type="CLASS" missed="3" covered="6"/></package><counter type="INSTRUCTION" missed="10027" covered="11351"/><counter type="BRANCH" missed="1531" covered="1070"/><counter type="LINE" missed="1806" covered="2310"/><counter type="COMPLEXITY" missed="1248" covered="970"/><counter type="METHOD" missed="248" covered="524"/><counter type="CLASS" missed="27" covered="120"/></report>